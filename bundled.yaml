openapi: 3.0.0
info:
  title: SOCRadar API Documentation
  description: "# Introduction\nComplete API documentation for SOCRadar platform services.\n\
    \n## Authentication\nAll APIs require authentication via an API key. You can find\
    \ your API key in the SOCRadar Platform under Settings -> API Options.\n\n## Rate\
    \ Limiting\nAPI calls are subject to rate limiting to ensure fair usage and system\
    \ stability.\n\n## License-Based API Access\nSOCRadar APIs are categorized into\
    \ different types based on licensing and credit requirements:\n\n### 1. Pay-per-Use\
    \ APIs (Credit-Based)\nThese APIs come with default credits based on license type,\
    \ with option to purchase additional credits:    \n\n\n\n- **Malware Analysis\
    \ API** (Requires Additional Key)\n  - Professional: 20 default credits\n  - Enterprise:\
    \ 100 default credits\n  - Premium: 1000 default credits\n- **CTI Threat Investigating\
    \ API** - 15,000 credits\n- **CTI Vulnerability API** - 1,500 credits (Professional\
    \ & Enterprise)\n- **Threat Actor Malware API** - 1,500 credits (Professional\
    \ & Enterprise)\n- **Threat Analysis API** - 1,500 credits (Professional & Enterprise)\n\
    - **CTI Threat Hunting Rules API** - 1,500 credits (Professional & Enterprise)\n\
    These APIs consume credits per request. Credit usage information is provided in\
    \ response headers:\n\n### 2. Add-on APIs (Extra Paid APIs)\nThese APIs are not\
    \ measured by platform credits but are available for additional purchase:\n- **ComboList\
    \ API** (Recommended for e-commerce and banking customers)\n- **Threat Feed Collection\
    \ Based API** (Included in Enterprise, optional add-on for Professional)\n\n###\
    \ 3. Platform-Based APIs\nAvailable based on license type:\n\n| API Name | Professional\
    \ | Enterprise | Premium |\n|----------|-------------|------------|--------------|\n\
    | ASM Vulnerabilities API | ✅ | ✅ | ✅ |\n| Brand Protection API | ✅ | ✅ | ✅ |\n\
    | Brand Protection API V2 | ✅ | ✅ | ✅ |\n| Digital Footprint API | ✅ | ✅ | ✅ |\n\
    | DRP Fraud Protection API | ✅ | ✅ | ✅ |\n| DRP Fraud Protection API V2 | ✅ |\
    \ ✅ | ✅ |\n| Incident API (V2, V3, V4) | ✅ | ✅ | ✅ |\n| Referer Log API | ✅ |\
    \ ✅ | ✅ |\n| Surface Web Monitoring API | ✅ | ✅ | ✅ |\n| Takedown API | ✅ | ✅\
    \ | ✅ |\n| User Audit Logs API | ✅ | ✅ | ✅ |\n| VIP Protection API | ✅ | ✅ | ✅\
    \ |\n| Dark Web Monitoring API | ✅ | ✅ | ✅ |\n| Dark Web Monitoring API V2 | ✅\
    \ | ✅ | ✅ |\n| Threat Feed IOC API | ❌ | ✅ | ✅ |\n\n### 4. Module-Based APIs\n\
    **Note**: Module-based APIs are exclusively available to customers who have purchased\
    \ the specific module license packages. Access to these APIs is strictly limited\
    \ to license holders of the corresponding modules.\n\n| Module License | API Name\
    \ | Without Module | With Module |\n|---------------|-----------|----------------|-------------|\n\
    | Advanced ASM | ASM Vulnerabilities API | ❌ | ✅  |\n| DRP | DRP Fraud Protection\
    \ API | ❌ | ✅  |\n| Advanced Brand Protection | Brand Protection API V2 | ❌ |\
    \ ✅  |\n| Advanced Dark Web | Dark Web Monitoring API V2 | ❌ | ✅  |\n| CTI | CTI\
    \ Threat Investigating API | ❌ | ✅  |\n| CTI | CTI Vulnerability API | ❌ | ✅ \
    \ |\n| CTI | Threat Actor Malware API | ❌ | ✅  |\n| CTI | Threat Analysis API\
    \ | ❌ | ✅  |\n| CTI | CTI Threat Hunting Rules API | ❌ | ✅  |\n"
  version: 1.0.0
  x-logo:
    url: https://platform.socradar.com/assets/images/logo.png
    altText: SOCRadar Logo
  contact:
    name: SOCRadar Support
    url: https://socradar.io
    email: support@socradar.io
x-tagGroups:
- name: Pay-Per-Use APIs (Additional Key APIs)
  tags:
  - Threat Actor Malware API
  - Threat Analysis API
  - Malware Analysis API
  - CTI Threat Hunting Rules API
  - CTI Threat Investigating API
  - Identity Intelligence API
  - Ransomware Victim API
  - CTI Vulnerability Intelligence API
- name: Add-On APIs
  tags:
  - Combolist API
- name: Platform-Based APIs
  tags:
  - ASM Vulnerabilities API
  - Brand Protection API
  - Brand Protection API V2
  - Dark Web Monitoring API
  - Dark Web Monitoring API V2
  - Digital Footprint API
  - DRP Fraud Protection API
  - DRP Fraud Protection API V2
  - Incident API V2
  - Incident API V3
  - Incident API V4
  - Referer Log API
  - Surface Web Monitoring API
  - Takedown API
  - Threat Feed IOC API
  - User Audit Logs API
  - VIP Protection API
servers:
- url: https://platform.socradar.com/api
  description: Production server
x-displayOptions:
  docExpansion: list
  deepLinking: true
  filter: true
  showExtensions: true
  showCommonExtensions: true
  defaultModelRendering: example
  defaultModelExpandDepth: 3
paths:
  /company/{company_id}/auditlogs:
    get:
      summary: Get company audit logs
      description: Retrieve audit logs for a specific company with date filtering.
      operationId: getCompanyAuditLogs
      tags:
      - User Audit Logs API
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier of the company.
      - name: start_date
        in: query
        required: false
        schema:
          type: string
          format: date
        example: '2024-09-23'
        description: Start date for filtering logs (YYYY-MM-DD).
      - name: end_date
        in: query
        required: false
        schema:
          type: string
          format: date
        example: '2024-09-30'
        description: End date for filtering logs (YYYY-MM-DD).
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
          minimum: 1
          maximum: 1000
        description: Number of records to return per request.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        timestamp:
                          type: string
                          format: date-time
                        action:
                          type: string
                        details:
                          type: object
                        user:
                          type: string
        '400':
          description: Bad request - Invalid parameters provided.
        '401':
          description: Unauthorized - Invalid or missing API key.
      security:
      - ApiKeyAuth: []
  /company/{company_id}/vulnerabilities/latest:
    get:
      summary: Retrieve Vulnerabilities
      description: 'This API retrieves vulnerabilities detected on customer assets.

        You can find the API Key under **Settings -> API Options Page**.

        '
      operationId: getVulnerabilities
      tags:
      - ASM Vulnerabilities API
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
        description: Unique Company ID to fetch vulnerabilities for.
      - name: start_date
        in: query
        required: false
        schema:
          type: string
          format: date
        example: '2024-10-20'
        description: Retrieves vulnerabilities discovered from this date onwards.
      - name: end_date
        in: query
        required: false
        schema:
          type: string
          format: date
        example: '2024-10-30'
        description: Retrieves vulnerabilities discovered up to this date.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  vulnerabilities:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: VULN-12345
                        title:
                          type: string
                          example: SQL Injection Vulnerability
                        severity:
                          type: string
                          enum:
                          - low
                          - medium
                          - high
                          - critical
                          example: high
                        status:
                          type: string
                          enum:
                          - open
                          - resolved
                          - false_positive
                          example: open
                        detected_at:
                          type: string
                          format: date-time
                          example: '2024-10-22T10:30:00Z'
                        affected_asset:
                          type: string
                          example: webserver.example.com
        '400':
          description: Bad request - Invalid parameters provided.
        '401':
          description: Unauthorized - Invalid or missing API key.
      security:
      - ApiKeyAuth: []
  /vulnerability/search_vulnerabilities:
    post:
      summary: Search Vulnerabilities
      description: "The CTI Vulnerability API allows you to retrieve information about\
        \ vulnerabilities you want.\nYou can use this API to access vulnerabilities\
        \ based on filters you apply or to retrieve specific vulnerability details.\n\
        Advanced vulnerability search and analysis with comprehensive threat context.\n\
        # Search Capabilities\n- CVE database search\n- Vulnerability trending\n-\
        \ Exploit prediction\n- Risk scoring\n# Intelligence Features\n- Real-time\
        \ vulnerability feeds\n- Exploit availability tracking\n- Patch information\n\
        - CVSS, EPSS, and SVRS scoring\n# Credit System\n- 1 credit per detailed analysis\n\
        - \"**Note:** Requires an additional key for vulnerability intelligence\"\n\
        - overview: |\n  - Comprehensive vulnerability intelligence platform\n  -\
        \ Real-time CVE tracking and analysis\n- target_audience: |\n  - Security\
        \ analysts\n  - Vulnerability managers\n  - Risk assessment teams\n  - Security\
        \ researchers\n- use_cases: |\n  - Vulnerability assessment\n  - Risk prioritization\n\
        - Threat intelligence correlation\n- Patch management\n- conclusion: Essential\
        \ for maintaining comprehensive vulnerability intelligence\n"
      operationId: searchVulnerabilities
      tags:
      - CTI Vulnerability Intelligence API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: string
                  format: date
                  example: '2024-10-01'
                end_date:
                  type: string
                  format: date
                  example: '2024-10-09'
                query:
                  type: string
                  example: palo
                page:
                  type: integer
                  example: 1
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      monthdays:
                        type: array
                        items:
                          type: string
                        example:
                        - '2025-02-10'
                        - '2025-02-11'
                        - '2025-02-12'
                        - '2025-02-13'
                        - '2025-02-14'
                        - '2025-02-15'
                        - '2025-02-16'
                      twitter_stats:
                        type: object
                        properties:
                          cve_details:
                            type: object
                            properties:
                              CVE-2025-1234:
                                type: object
                                properties:
                                  audience:
                                    type: integer
                                    example: 987654
                                  daily_audience:
                                    type: object
                                    properties:
                                      '2025-02-12':
                                        type: integer
                                        example: 654321
                                      '2025-02-13':
                                        type: integer
                                        example: 12345
                                      '2025-02-14':
                                        type: integer
                                        example: 67890
                                  daily_scores:
                                    type: object
                                    properties:
                                      '2025-02-11':
                                        type: integer
                                        example: 5
                                      '2025-02-12':
                                        type: integer
                                        example: 120
                                      '2025-02-13':
                                        type: integer
                                        example: 45
                                      '2025-02-14':
                                        type: integer
                                        example: 8
                                  daily_stats:
                                    type: object
                                    properties:
                                      '2025-02-11':
                                        type: integer
                                        example: 2
                                      '2025-02-12':
                                        type: integer
                                        example: 18
                                      '2025-02-13':
                                        type: integer
                                        example: 7
                                      '2025-02-14':
                                        type: integer
                                        example: 3
                                  description:
                                    type: string
                                    example: A vulnerability in the authentication
                                      module of ExampleOS could allow an unauthenticated,
                                      remote attacker to bypass security...
                                  details:
                                    type: object
                                    properties:
                                      content:
                                        type: string
                                        example: A vulnerability in the authentication
                                          module of ExampleOS could allow an unauthenticated,
                                          remote attacker to bypass security...
                                      id:
                                        type: string
                                        example: CVE-2025-1234
                                      release_date:
                                        type: string
                                        example: 2025-02-10 15:45
                                      score:
                                        type: number
                                        example: 8.7
                                      svrs:
                                        type: integer
                                        example: 75
                                      title:
                                        type: string
                                        example: CVE-2025-1234
                                      update_date:
                                        type: string
                                        example: 2025-02-15 10:30
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /vulnerability/get_cve_trends:
    get:
      summary: Get CVE Trends
      description: 'Retrieve trends related to CVEs over a given timeframe.

        '
      operationId: getCveTrends
      tags:
      - CTI Vulnerability Intelligence API
      parameters:
      - name: scope
        in: query
        required: false
        schema:
          type: string
          example: cve_trends_weekly
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      credit_details:
                        type: object
                        properties:
                          max_daily_credit:
                            type: integer
                            example: 150
                          max_monthly_credit:
                            type: integer
                            example: 150
                          remaining_credit:
                            type: integer
                            example: 141
                          remaining_daily_credit:
                            type: integer
                            example: 141
                          remaining_monthly_credit:
                            type: integer
                            example: 141
                          total_api_credit:
                            type: integer
                            example: 150
                      monthdays:
                        type: array
                        items:
                          type: string
                        example:
                        - '2025-02-10'
                        - '2025-02-11'
                        - '2025-02-12'
                        - '2025-02-13'
                        - '2025-02-14'
                        - '2025-02-15'
                        - '2025-02-16'
                      twitter_stats:
                        type: object
                        properties:
                          cve_details:
                            type: object
                            properties:
                              CVE-2025-1234:
                                type: object
                                properties:
                                  audience:
                                    type: integer
                                    example: 987654
                                  daily_audience:
                                    type: object
                                    properties:
                                      '2025-02-12':
                                        type: integer
                                        example: 654321
                                      '2025-02-13':
                                        type: integer
                                        example: 12345
                                      '2025-02-14':
                                        type: integer
                                        example: 67890
                                  daily_scores:
                                    type: object
                                    properties:
                                      '2025-02-11':
                                        type: integer
                                        example: 5
                                      '2025-02-12':
                                        type: integer
                                        example: 120
                                      '2025-02-13':
                                        type: integer
                                        example: 45
                                      '2025-02-14':
                                        type: integer
                                        example: 8
                                  daily_stats:
                                    type: object
                                    properties:
                                      '2025-02-11':
                                        type: integer
                                        example: 2
                                      '2025-02-12':
                                        type: integer
                                        example: 18
                                      '2025-02-13':
                                        type: integer
                                        example: 7
                                      '2025-02-14':
                                        type: integer
                                        example: 3
                                  description:
                                    type: string
                                    example: A vulnerability in the authentication
                                      module of ExampleOS could allow an unauthenticated,
                                      remote attacker to bypass security...
                                  details:
                                    type: object
                                    properties:
                                      content:
                                        type: string
                                        example: A vulnerability in the authentication
                                          module of ExampleOS could allow an unauthenticated,
                                          remote attacker to bypass security...
                                      id:
                                        type: string
                                        example: CVE-2025-1234
                                      release_date:
                                        type: string
                                        example: 2025-02-10 15:45
                                      score:
                                        type: number
                                        example: 8.7
                                      svrs:
                                        type: integer
                                        example: 75
                                      title:
                                        type: string
                                        example: CVE-2025-1234
                                      update_date:
                                        type: string
                                        example: 2025-02-15 10:30
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /vulnerability/cve_details:
    get:
      summary: Get CVE Details
      description: 'Retrieve detailed information about a specific CVE, including
        impact, trends, history, and related data.

        '
      operationId: getCveDetails
      tags:
      - CTI Vulnerability Intelligence API
      parameters:
      - name: cve
        in: query
        required: true
        schema:
          type: string
          example: cve-2024-4987     cve must be lowercase
      - name: include_news
        in: query
        required: false
        schema:
          type: boolean
          example: true or false
      - name: include_dorks
        in: query
        required: false
        schema:
          type: boolean
          example: true or false
      - name: include_dork_ioc_country_stats
        in: query
        required: false
        schema:
          type: boolean
          example: true or false
      - name: include_tweets
        in: query
        required: false
        schema:
          type: boolean
          example: true or false
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  credit_details:
                    type: object
                    properties:
                      max_daily_credit:
                        type: integer
                        example: 150
                      max_monthly_credit:
                        type: integer
                        example: 150
                      remaining_credit:
                        type: integer
                        example: 141
                      remaining_daily_credit:
                        type: integer
                        example: 141
                      remaining_monthly_credit:
                        type: integer
                        example: 141
                      total_api_credit:
                        type: integer
                        example: 150
                  data:
                    type: object
                    properties:
                      cve_details:
                        type: object
                        properties:
                          cveid:
                            type: string
                            example: CVE-2024-4987
                          description:
                            type: string
                            example: '** Reserved Cve **'
                          cvss:
                            type: number
                            example: 0
                          cve_severity:
                            type: string
                            example: ''
                          epss:
                            type: number
                            example: 0
                          exploit_list:
                            type: array
                            items:
                              type: string
                          github_repos:
                            type: array
                            items:
                              type: string
                          history:
                            type: object
                            properties:
                              cveid:
                                type: string
                                example: CVE-2024-4987
                              published:
                                type: string
                                format: date-time
                                example: '0001-01-01 00:00:00'
                          modified:
                            type: string
                            format: date-time
                            example: '0001-01-01 00:00:00'
                          published:
                            type: string
                            format: date-time
                            example: '0001-01-01 00:00:00'
                          tags:
                            type: array
                            items:
                              type: string
                            example:
                            - Reserved Cve
                          cve_trend_references_dict:
                            type: object
                            additionalProperties:
                              type: object
                              properties:
                                github_repo_count:
                                  type: integer
                                  example: 0
                                news_count:
                                  type: integer
                                  example: 0
                                tweet_count:
                                  type: integer
                                  example: 0
                      dork_ioc_country_stats:
                        type: array
                        items:
                          type: object
                      dorks:
                        type: array
                        items:
                          type: object
                      news:
                        type: object
                        properties:
                          data:
                            type: array
                            items:
                              type: object
                      tweets:
                        type: object
                        properties:
                          data:
                            type: array
                            items:
                              type: object
                  is_success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Success
                  response_code:
                    type: integer
                    example: 200
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /download_rules:
    post:
      summary: CTI Threat Hunting Rules Download
      description: Require an Additional API Key (Pay-Per-Use APIs for Related License)
        - Enterprise, CTIFORSOC Ultimate
      operationId: downloadThreatHuntingRules
      tags:
      - CTI Threat Hunting Rules API
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                download_ids:
                  type: string
                  description: Comma separated list of rule IDs to download
                  example: 25131,25130
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /search_rules:
    post:
      summary: Threat Hunting Rules Search API
      description: Require an Additional API Key (Pay-Per-Use APIs for Related License)
        - Enterprise, CTIFORSOC Ultimate
      operationId: searchThreatHuntingRules
      tags:
      - CTI Threat Hunting Rules API
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                page:
                  type: string
                  description: Optional - default:1
                limit:
                  type: string
                  description: Optional - default:100
                  example: '2'
                rule_type:
                  type: string
                  description: Optional - SIGMA, YARA
                  example: SIGMA
                source_type:
                  type: string
                  description: Optional - SOCRadar, Open Source
                  example: SOCRadar
                tags:
                  type: string
                  description: Optional - attack.t1112
                start_date:
                  type: string
                  description: Optional
                  example: '2024-10-20'
                end_date:
                  type: string
                  description: Optional
                  example: '2024-10-30'
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /ransomware/victims:
    get:
      summary: Get Ransomware Victims
      description: 'Retrieve information about ransomware victims with various filtering
        options.

        '
      operationId: getRansomwareVictims
      tags:
      - Ransomware Victim API
      parameters:
      - name: start_date
        in: query
        required: false
        schema:
          type: string
          format: date
          example: '2023-01-10'
        description: Filter results from this start date.
      - name: news_categorized_tags
        in: query
        required: false
        schema:
          type: string
          example: '{"news_share_types": ["Victim Announcement"]}'
        description: Filter based on news categorized tags, such as Victim Announcements.
      - name: page
        in: query
        required: false
        schema:
          type: integer
          default: 1
        description: Page number for pagination.
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 50
        description: Number of records per page.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  victims:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          example: Example Company
                        attack_date:
                          type: string
                          format: date
                          example: '2023-01-10'
                        ransomware_group:
                          type: string
                          example: LockBit
                        description:
                          type: string
                          example: Company data leaked after refusing ransom payment.
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /api/threathose/query/extended:
    post:
      summary: Threat Hunting Extended API
      description: 'This API allows users to obtain the latest ThreatHunting results,
        including Breach Datasets, Stealer logs, IP Risk Score, etc.

        The API request returns data for the last three months only. Therefore, users
        should gradually filter the `start_date` and `end_date`

        to cover a three-month period.

        '
      operationId: threatHuntingExtended
      tags:
      - CTI Threat Investigating API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                  description: Required - The keyword to search for.
                  example: exampledomain.com
                start_date:
                  type: string
                  format: date
                  description: Optional - The start date of the search.
                  example: '2023-01-01'
                end_date:
                  type: string
                  format: date
                  description: Optional - The end date of the search.
                  example: '2023-01-31'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  query:
                    type: string
                    example: Queried Keyword
                  remaining_credit:
                    type: integer
                    example: 15000
                  threathose_result:
                    type: object
                    description: ThreatHose search result
                  searchcode_result:
                    type: array
                    items:
                      type: string
                    description: Result from code services, e.g., Github
                  public_buckets_result:
                    type: object
                    description: Public buckets containing the queried keyword
                  reputation_result:
                    type: array
                    items:
                      type: string
                    description: Reputation data for domains, URLs, IPs, or hashes
                  stealer_log_result:
                    type: array
                    items:
                      type: string
                    description: Stealer logs data for domains, emails, IPs, or URLs
                  breach_records_result:
                    type: object
                    description: Breach records for the queried domain or email
                  blacklisted_entity_result:
                    type: object
                    description: Blacklisted entities matching the queried keyword
                  ip_score_result:
                    type: object
                    description: Risk score for a queried IP address
                  hash_score_result:
                    type: object
                    description: Risk score for a queried hash
        '400':
          description: Bad request - Invalid parameters.
        '401':
          description: Unauthorized - Invalid or missing API key.
      security:
      - ApiKeyAuth: []
  /fraud/get_list/{company_id}:
    get:
      summary: Get Fraud Protection Data
      description: "The Fraud API helps different systems, such as e-commerce websites\
        \ or financial systems, \nto communicate and share information about detected\
        \ fraud instances. \nThe API's main goal is to improve security measures and\
        \ reduce the chances of fraudulent \nactivities by providing a means for systems\
        \ to exchange information about fraud detections \non the Fraud Protection\
        \ Page.\n\nBy using this API, organizations can better protect themselves\
        \ against potential fraud \nand enhance their ability to monitor and mitigate\
        \ fraud risks.\n"
      operationId: getFraudProtectionData
      tags:
      - DRP Fraud Protection API
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier of the company.
      - name: page
        in: query
        required: false
        schema:
          type: integer
          default: 1
        description: Page number for pagination.
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 100
        description: Number of records per page.
      - name: start_date
        in: query
        required: false
        schema:
          type: string
          format: date
        description: Start date for filtering fraud data (YYYY-MM-DD).
        example: '2023-07-06'
      - name: end_date
        in: query
        required: false
        schema:
          type: string
          format: date
        description: End date for filtering fraud data (YYYY-MM-DD).
        example: '2023-07-07'
      responses:
        '200':
          description: Successfully retrieved fraud protection data.
        '400':
          description: Bad request. Invalid parameters.
        '401':
          description: Unauthorized. API Key is missing or invalid.
      security:
      - ApiKeyAuth: []
  /company/{company_id}/fraud-protection/V2:
    get:
      summary: Fraud Protection V2
      description: 'The Fraud API helps different systems, such as e-commerce websites
        or financial systems, to communicate and share information about detected
        fraud instances. The API''s main goal is to improve security measures and
        reduce the chances of fraudulent activities by providing a means for systems
        to exchange information about fraud detections on the Fraud Protection Page.

        By using this API, organizations can better protect themselves against potential
        fraud and enhance their ability to monitor and mitigate fraud risks.'
      operationId: getFraudProtectionV2
      tags:
      - DRP Fraud Protection API V2
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for the company.
      - name: searchString
        in: query
        required: false
        schema:
          type: string
        description: Search string for filtering results.
      - name: recordStatus
        in: query
        required: false
        schema:
          type: string
        description: Status of the fraud record.
        example: OPEN
      - name: recordStatusReason
        in: query
        required: false
        schema:
          type: string
        description: Reason for the fraud status.
        example: INVESTIGATING
      - name: alarmStatus
        in: query
        required: false
        schema:
          type: string
        description: Status of the fraud alarm.
        example: OPEN
      - name: cvv
        in: query
        required: false
        schema:
          type: string
        description: Card validation value (CVV).
      - name: countryCode
        in: query
        required: false
        schema:
          type: string
        description: Country code filter.
      - name: expired
        in: query
        required: false
        schema:
          type: boolean
        description: Indicates if the fraud report is expired.
        example: true
      - name: alarmId
        in: query
        required: false
        schema:
          type: integer
        description: Unique ID of the alarm.
      - name: notificationId
        in: query
        required: false
        schema:
          type: integer
        description: Unique ID of the notification.
      - name: includeHistory
        in: query
        required: false
        schema:
          type: boolean
        description: Whether to include historical records.
        example: true
      - name: startDate
        in: query
        required: false
        schema:
          type: string
          format: date
        description: Start date for filtering fraud records.
        example: '1923-09-23'
      - name: endDate
        in: query
        required: false
        schema:
          type: string
          format: date
        description: End date for filtering fraud records.
        example: '1923-09-23'
      - name: page
        in: query
        required: false
        schema:
          type: integer
        description: Page number for pagination.
        example: 1
      - name: limit
        in: query
        required: false
        schema:
          type: integer
        description: Number of results per page.
        example: 100
      - name: orderDir
        in: query
        required: false
        schema:
          type: string
        description: Sorting order for results.
        example: desc
      responses:
        '200':
          description: Successful response with fraud protection data.
        '400':
          description: Bad request due to incorrect parameters.
        '401':
          description: Unauthorized request. API key is missing or invalid.
      security:
      - ApiKeyAuth: []
  /identity/intelligence/query:
    get:
      summary: Main Query
      description: Retrieve identity intelligence data.
      operationId: getIdentityIntelligence
      tags:
      - Identity Intelligence API
      parameters:
      - name: key
        in: query
        required: true
        schema:
          type: string
        description: API key for authentication.
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query.
      - name: machine_ip_address
        in: query
        required: false
        schema:
          type: string
        description: IP address associated with machine.
      - name: machine_ip_block
        in: query
        required: false
        schema:
          type: string
        description: IP block range.
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /identity/intelligence/query_details/credential_file/download:
    get:
      summary: Download Credential File
      description: Download credential files related to queried intelligence.
      operationId: downloadCredentialFile
      tags:
      - Identity Intelligence API
      parameters:
      - name: key
        in: query
        required: true
        schema:
          type: string
      - name: credential_id
        in: query
        required: true
        schema:
          type: string
        description: ID of the credential to download.
      responses:
        '200':
          description: File successfully downloaded
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /identity/intelligence/query_details/info_file/download:
    get:
      summary: Download Info File
      description: Download additional information file related to a credential.
      operationId: downloadInfoFile
      tags:
      - Identity Intelligence API
      parameters:
      - name: key
        in: query
        required: true
        schema:
          type: string
      - name: credential_id
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: File successfully downloaded
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /identity/intelligence/breach/query:
    get:
      summary: Breach Query
      description: Query data breaches for identity intelligence.
      operationId: getBreachQuery
      tags:
      - Identity Intelligence API
      parameters:
      - name: key
        in: query
        required: true
        schema:
          type: string
      - name: q
        in: query
        required: false
        schema:
          type: string
        description: Search query for breach data.
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /add/company/{company_id}/takedown/request/social_media_risks:
    post:
      summary: Post Impersonating Social Media Accounts
      description: 'This API allows customers to submit takedown requests for impersonating
        social media accounts.

        '
      operationId: postImpersonatingSocialMedia
      tags:
      - Takedown API
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                impersonating_account:
                  type: string
                  example: username
                notes:
                  type: string
                  example: Phishing Notes
                send_alarm:
                  type: boolean
                  example: true
                email:
                  type: string
                  example: email@example.com
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request - Invalid parameters.
        '401':
          description: Unauthorized - Invalid or missing API key.
      security:
      - ApiKeyAuth: []
  /add/company/{company_id}/takedown/request:
    post:
      summary: Post Impersonating Domains
      description: 'This API allows customers to submit takedown requests for phishing
        domains.

        It automates the process of managing takedown requests for phishing campaigns
        against clients.

        The feature is available on both **platform** and **email**.

        '
      operationId: postImpersonatingDomains
      tags:
      - Takedown API
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
        description: Unique identifier of the company.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                abuse_type:
                  type: string
                  example: potential_phishing
                entity:
                  type: string
                  example: example.com
                type:
                  type: string
                  example: phishing_domain
                notes:
                  type: string
                  example: Phishing Domain Details
                send_alarm:
                  type: boolean
                  example: true
                email:
                  type: string
                  example: email@example.com
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request - Invalid parameters.
        '401':
          description: Unauthorized - Invalid or missing API key.
      security:
      - ApiKeyAuth: []
  /add/company/{company_id}/takedown/request/source_code_leaks:
    post:
      summary: Post Source Code Leaks
      description: 'This API allows customers to submit takedown requests for leaked
        source code.

        '
      operationId: postSourceCodeLeaks
      tags:
      - Takedown API
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                notes:
                  type: string
                  example: Phishing Notes
                email:
                  type: string
                  example: email@example.com
                id:
                  type: integer
                  example: 123456
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request - Invalid parameters.
        '401':
          description: Unauthorized - Invalid or missing API key.
      security:
      - ApiKeyAuth: []
  /get/company/{company_id}/takedown/progress:
    get:
      summary: Get Takedown Progress Data
      description: 'This API enables customers to monitor and retrieve the progress
        of their takedown requests.

        '
      operationId: getTakedownProgress
      tags:
      - Takedown API
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
      - name: asset_id
        in: query
        required: true
        schema:
          type: string
        example: your_asset_id
      - name: type
        in: query
        required: true
        schema:
          type: string
        example: impersonating_accounts
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request - Invalid parameters.
        '401':
          description: Unauthorized - Invalid or missing API key.
      security:
      - ApiKeyAuth: []
  /threat_feed_ioc:
    get:
      summary: Get Threat Feeds
      description: 'Retrieve a specific threat feed list from SOCRadar.

        This API provides feeds in various formats (JSON, CSV, raw, etc.) and integrates
        with different security tools.

        You can find the API Key under **Settings -> API Options Page** (Enterprise,
        Add-On Feature for Professional).

        '
      operationId: getThreatFeeds
      tags:
      - Threat Feed IOC API
      parameters:
      - name: collection_uuid
        in: path
        required: true
        schema:
          type: string
        example: d89ab3b58e174b8c82767088d8e66cae
        description: Unique identifier of the threat feed collection.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  feed_data:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: IP
                        value:
                          type: string
                          example: 192.168.1.1
                        first_seen:
                          type: string
                          format: date-time
                          example: '2024-02-14T12:00:00Z'
        '400':
          description: Bad request - Invalid collection UUID.
        '401':
          description: Unauthorized - Invalid or missing API key.
      security:
      - ApiKeyAuth: []
  /combolists/lists:
    get:
      summary: Get available combolists
      description: Retrieve a list of all available combo lists with their download
        links
      operationId: getComboLists
      tags:
      - Combolists API
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /combolists/detail/{combolist_uuid}:
    get:
      summary: Download specific combolist
      description: Download a specific combo list by its UUID
      operationId: getCombolistDetails
      tags:
      - Combolist API
      parameters:
      - name: combolist_uuid
        in: path
        required: true
        schema:
          type: string
        description: UUID of the combo list to download
      responses:
        '200':
          description: Successful response
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
      - ApiKeyAuth: []
  /incident_v2:
    get:
      summary: Get Incident Details (NotificationID Based)
      description: 'You can obtain and take actions over the incidents of your company
        with this API by using the endpoints stated below.

        Incidents are available to be examined on the SOCRadar platform as well.

        '
      operationId: getIncidentDetails
      tags:
      - Incident API V2
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          example: 20
        description: Optional - The number of incidents to retrieve
      - name: severity
        in: query
        required: false
        schema:
          type: string
          enum:
          - INFO
          - LOW
          - MEDIUM
          - HIGH
          - CRITICAL
          example: INFO
        description: Optional - The severity level of incidents
      - name: is_resolved
        in: query
        required: false
        schema:
          type: boolean
          example: true
        description: Optional - Filter by resolved incidents
      - name: is_false_positive
        in: query
        required: false
        schema:
          type: boolean
          example: true
        description: Optional - Filter by false positive incidents
      - name: start_date
        in: query
        required: false
        schema:
          type: string
          format: date
          example: '2023-09-02'
        description: Optional - Start date for filtering incidents
      - name: end_date
        in: query
        required: false
        schema:
          type: string
          format: date
          example: '2023-09-02'
        description: Optional - End date for filtering incidents
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  incidents:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: '123456'
                        severity:
                          type: string
                          example: INFO
                        is_resolved:
                          type: boolean
                          example: true
                        is_false_positive:
                          type: boolean
                          example: false
                        created_at:
                          type: string
                          format: date-time
                          example: '2023-09-02T12:00:00Z'
                        details:
                          type: string
                          example: Incident details description
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /company/{company_id}/incidents/v3:
    get:
      summary: Get Incident Details
      description: Retrieve incidents based on notification ID.
      operationId: getIncidentDetails
      tags:
      - Incident API V3
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
      - name: page
        in: query
        required: false
        schema:
          type: integer
        description: Default is 1
      - name: limit
        in: query
        required: false
        schema:
          type: integer
        description: Limit the number of incidents to be returned. Max 100. Default
          is 20.
      - name: severity
        in: query
        required: false
        schema:
          type: string
        description: 'Severity levels of the incidents to be returned. Multiple levels
          can be separated by a comma (,).

          Example: severity=Info,High

          Accepted values: INFO, LOW, MEDIUM, HIGH

          '
      - name: is_resolved
        in: query
        required: false
        schema:
          type: boolean
        description: Resolution status of the incidents. Omit to retrieve all incidents.
      - name: is_false_positive
        in: query
        required: false
        schema:
          type: boolean
        description: False positive status of the incidents. Omit to retrieve all
          incidents.
      - name: incident_main_type
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
        description: Main type of incident. Case-insensitive.
      - name: incident_sub_type
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
        description: Subtype of incident. Case-insensitive.
      - name: start_date
        in: query
        required: false
        schema:
          type: integer
          format: date-time
        description: Start date for fetching incidents. Format YYYY-MM-DD or Unix
          Timestamp.
      - name: end_date
        in: query
        required: false
        schema:
          type: integer
          format: date-time
        description: End date for fetching incidents. Format YYYY-MM-DD or Unix Timestamp.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  notification_id:
                    type: integer
                    description: Notification Incident's ID
                  insert_date:
                    type: string
                    description: Creation date of the incident
                  is_resolved:
                    type: boolean
                    description: States whether the incident is resolved
                  resolved_by:
                    type: string
                    description: The person who resolved the incident
                  resolved_date:
                    type: string
                    description: The resolved date of the incident
                  alarm_risk_level:
                    type: string
                    description: 'Risk level of the incident [INFO, LOW, MEDIUM, HIGH]

                      '
                  alarm_type_details:
                    type: object
                    properties:
                      alarm_main_type:
                        type: string
                        description: Main type of incident
                      alarm_sub_type:
                        type: string
                        description: Subtype of incident
                      alarm_generic_title:
                        type: string
                        description: Generic title of incident
                  is_false_positive:
                    type: boolean
                    description: False positive status of the incident
                  is_reduced:
                    type: boolean
                    description: 'Indicates whether there are more than ten individual
                      alarms. If true, use "Consolidate Alarm Content API Endpoint"
                      for full details.

                      '
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /company/{company_id}/alarm/add/comment:
    post:
      summary: Add Alarm Comment
      description: Add comments to an alarm based on notification ID.
      operationId: addAlarmComment
      tags:
      - Incident API V3
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_email:
                  type: string
                comment:
                  type: string
                notification_id:
                  type: integer
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /company/{company_id}/alarms/status/revert:
    post:
      summary: Revert Incident Alarm Status
      description: Revert the status of incidents using alarm ID.
      operationId: revertIncidentStatus
      tags:
      - Incident API V3
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                alarm_ids:
                  type: array
                  items:
                    type: integer
                comments:
                  type: string
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /company/{company_id}/alarms/status/change:
    post:
      summary: Update Alarm Status
      description: Updates the status of a specific alarm for a given company.
      operationId: updateAlarmStatus
      tags:
      - Incident API V4
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
        description: Company identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  description: 'New status for the alarm

                    - 0  # OPEN

                    - 1  # INVESTIGATING

                    - 2  # RESOLVED

                    - 4  # PENDING_INFO

                    - 5  # LEGAL_REVIEW

                    - 6  # VENDOR_ASSESSMENT

                    - 9  # FALSE_POSITIVE

                    - 10 # DUPLICATE

                    - 11 # PROCESSED_INTERNALLY

                    - 12 # MITIGATED

                    - 13 # NOT_APPLICABLE

                    '
              alarm_ids:
                type: array
                items:
                  type: string
                description: List of alarm IDs
              comments:
                type: string
                description: Additional comments
              example:
                status: '10'
                alarm_ids:
                - '51698775'
                - '51680624'
                comments: test
    responses:
      '200':
        description: Alarm status successfully updated
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: 'null'
                is_success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: Successfully updated the status of the selected alarms
                response_code:
                  type: integer
                  example: 200
      '400':
        description: Bad request
      '401':
        description: Unauthorized
    security:
    - ApiKeyAuth: []
  /company/{company_id}/incidents/resolve:
    post:
      summary: Mark Incident as Resolved
      description: Mark a consolidated incident as resolved based on notification
        ID.
      operationId: markIncidentResolved
      tags:
      - Incident API V3
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comments:
                  type: string
                notification_ids:
                  type: array
                  items:
                    type: integer
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /company/{company_id}/incidents/fp:
    post:
      summary: Mark Incident as False Positive
      description: Mark a consolidated incident as false positive.
      operationId: markIncidentFalsePositive
      tags:
      - Incident API V3
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comments:
                  type: string
                notification_ids:
                  type: array
                  items:
                    type: integer
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /company/{company_id}/incidents/ask/analyst:
    post:
      summary: Ask The Analyst
      description: Contact SOCRadar analysts for further incident assistance.
      operationId: askTheAnalyst
      tags:
      - Incident API V3
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comments:
                  type: string
                notification_id:
                  type: integer
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /company/{company_id}/incidents/v4:
    get:
      summary: Retrieve incident details
      description: Fetch security incidents with their details, compliance info and
        response actions.
      operationId: getIncidentsDetail
      tags:
      - Incident API V4
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
        description: Company identifier
      - name: page
        in: query
        required: false
        schema:
          type: integer
          default: 1
        description: Page number for pagination
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 20
        description: Results per page (max 100)
      - name: start_date
        in: query
        required: false
        schema:
          type: string
          format: date
        description: Filter from date (YYYY-MM-DD)
      - name: end_date
        in: query
        required: false
        schema:
          type: string
          format: date
        description: Filter to date (YYYY-MM-DD)
      - name: alarm_type_ids
        in: query
        required: false
        schema:
          type: array
          items:
            type: integer
        description: Filter by alarm types
      - name: excluded_alarm_type_ids
        in: query
        required: false
        schema:
          type: array
          items:
            type: integer
        description: Exclude alarm types
      - name: notification_ids
        in: query
        required: false
        schema:
          type: array
          items:
            type: integer
        description: Filter by notifications
      - name: alarm_ids
        in: query
        required: false
        schema:
          type: array
          items:
            type: integer
        description: Filter by alarms
      - name: status
        in: query
        required: false
        schema:
          type: string
          enum:
          - OPEN
          - CLOSED
          - ON_HOLD
          - IN_PROGRESS
        description: Filter by status
      - name: assignees
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
        description: Filter by assigned users
      - name: excluded_assignees
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
        description: Exclude assigned users
      - name: excluded_status
        in: query
        required: false
        schema:
          type: string
        description: Exclude by status
      - name: tags
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
        description: Filter by tags
      - name: excluded_tags
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
        description: Exclude tags
      - name: alarm_main_types
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
        description: Filter by main alarm types
      - name: excluded_alarm_main_types
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
        description: Exclude main alarm types
      - name: alarm_sub_types
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
        description: Filter by alarm subtypes
      - name: excluded_alarm_sub_types
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
        description: Exclude alarm subtypes
      - name: alarm_title
        in: query
        required: false
        schema:
          type: string
        description: Filter by alarm title
      - name: excluded_alarm_title
        in: query
        required: false
        schema:
          type: string
        description: Exclude alarm titles
      - name: severities
        in: query
        required: false
        schema:
          type: string
          enum:
          - LOW
          - MEDIUM
          - HIGH
          - CRITICAL
        description: Filter by severity
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  is_success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Success
                  response_code:
                    type: integer
                    example: 200
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        alarm_id:
                          type: integer
                          example: 51681742
                          description: Alarm identifier
                        alarm_asset:
                          type: string
                          example: TESTSOCRadar
                          description: Affected asset
                        alarm_assignees:
                          type: array
                          items:
                            type: string
                          description: Assigned users
                        alarm_related_assets:
                          type: array
                          items:
                            type: string
                          description: Related assets
                        alarm_related_entities:
                          type: array
                          items:
                            type: string
                          description: Related entities
                        alarm_risk_level:
                          type: string
                          enum:
                          - LOW
                          - MEDIUM
                          - HIGH
                          - CRITICAL
                          example: HIGH
                          description: Risk level
                        alarm_text:
                          type: string
                          example: Detected stolen credentials from infected system
                          description: Alarm details
                        alarm_response:
                          type: string
                          example: Isolate system and investigate
                          description: Response steps
                        alarm_type_details:
                          type: object
                          description: Alarm type info
                          properties:
                            alarm_compliance_list:
                              type: array
                              description: Related compliance frameworks
                              items:
                                type: object
                                properties:
                                  control_item:
                                    type: string
                                    description: Control ID
                                  description:
                                    type: string
                                    description: Control details
                                  name:
                                    type: string
                                    description: Framework name
                            alarm_default_mitigation_plan:
                              type: string
                              description: Default mitigation steps
                            alarm_default_risk_level:
                              type: string
                              description: Default risk level
                            alarm_detection_and_analysis:
                              type: string
                              description: Detection guidance
                            alarm_generic_title:
                              type: string
                              description: Standard title
                            alarm_main_type:
                              type: string
                              description: Main category
                            alarm_sub_type:
                              type: string
                              description: Sub-category
                        content:
                          type: object
                          description: Technical details
                          properties:
                            antivirus:
                              type: string
                              description: AV status
                            app:
                              type: string
                              description: Affected app
                            compromised_domains:
                              type: string
                              description: Affected domains
                            compromised_emails:
                              type: string
                              description: Affected emails
                            compromised_ips:
                              type: string
                              description: Affected IPs
                            computer_name:
                              type: string
                              description: System name
                            credential_details:
                              type: array
                              description: Compromised credentials
                              items:
                                type: object
                                properties:
                                  Password:
                                    type: string
                                    description: Password
                                  URL:
                                    type: string
                                    description: Source URL
                                  User:
                                    type: string
                                    description: Username
                            guid:
                              type: string
                              description: System GUID
                            hwid:
                              type: string
                              description: Hardware ID
                            log_content_link:
                              type: string
                              description: Log URL
                            log_date:
                              type: string
                              description: Detection time
                            mac_address:
                              type: string
                              description: MAC address
                            machine_id:
                              type: string
                              description: Machine ID
                            malware_family:
                              type: string
                              description: Malware type
                            malware_path:
                              type: string
                              description: Malware location
                            socradar_process_date:
                              type: string
                              description: Processing time
                            source_full_content:
                              type: string
                              description: Full source
                            timezone:
                              type: string
                              description: System timezone
                            uac:
                              type: string
                              description: UAC status
                            username:
                              type: string
                              description: System user
                        date:
                          type: string
                          format: date-time
                          description: Creation date
                        extra:
                          type: array
                          items:
                            type: object
                          description: Additional info
                        history:
                          type: array
                          description: Change history
                          items:
                            type: object
                            properties:
                              action_taken_by:
                                type: string
                                description: Actor
                              action_type:
                                type: string
                                description: Action type
                              date:
                                type: string
                                format: date-time
                                description: Action time
                              description:
                                type: string
                                description: Action details
                        is_approved:
                          type: boolean
                          description: Approval status
                        last_notification_date:
                          type: string
                          format: date-time
                          description: Last notification
                        notes:
                          type: array
                          items:
                            type: object
                          description: Additional notes
                        notification_id:
                          type: integer
                          description: Notification ID
                        status:
                          type: string
                          enum:
                          - OPEN
                          - CLOSED
                          - ON_HOLD
                          - IN_PROGRESS
                          description: Current status
                        tags:
                          type: array
                          items:
                            type: string
                          description: Related tags
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Server error
      security:
      - ApiKeyAuth: []
  /company/{company_id}/alarm/add/comment/v2:
    post:
      summary: Post Alarm Comment (Incident Based)
      description: Add a comment to an alarm related to an incident.
      operationId: postAlarmComment
      tags:
      - Incident API V4
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
        description: Company identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_email:
                  type: string
                  format: email
                  description: Email of the user posting the comment.
                  example: test.email@test.com
                alarm_id:
                  type: integer
                  description: ID of the alarm.
                  example: 54232
                comment:
                  type: string
                  description: Comment text.
                  example: Investigating by legal team
      responses:
        '200':
          description: Comment successfully added.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
      security:
      - ApiKeyAuth: []
  /company/{company_id}/incidents/ask/analyst/v2:
    post:
      summary: Ask To Analyst (Incident Based)
      description: Request assistance from an analyst for an incident.
      operationId: askToAnalyst
      tags:
      - Incident API V4
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
        description: Company identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                alarm_id:
                  type: integer
                  description: ID of the alarm.
                  example: 12323
                comment:
                  type: string
                  description: Message for the analyst.
                  example: Hi Team, I need your assistance...
      responses:
        '200':
          description: Request successfully sent.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
      security:
      - ApiKeyAuth: []
  /company/{company_id}/alarm/{alarm_id}/assignee:
    post:
      summary: Change Assignee (Incident Based)
      description: Assign a new assignee to an alarm.
      operationId: changeAssignee
      tags:
      - Incident API V4
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
        description: Company identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_ids:
                  type: array
                  items:
                    type: integer
                  description: List of user IDs to assign.
                  example:
                  - 21321
                user_emails:
                  type: string
                  format: email
                  description: Email of the new assignee.
                  example: DRP_Assignee@email.com
      responses:
        '200':
          description: Alarm assignee successfully updated
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
      security:
      - ApiKeyAuth: []
  /company/{company_id}/alarm/severity:
    post:
      summary: Change Severity (Incident Based)
      description: Modify the severity level of an alarm.
      operationId: changeSeverity
      tags:
      - Incident API V4
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
        description: Company identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                alarm_id:
                  type: integer
                  description: ID of the alarm.
                  example: 2312312312
                severity:
                  type: string
                  description: New severity level.
                  example: LOW
      responses:
        '200':
          description: Severity successfully changed.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
      security:
      - ApiKeyAuth: []
  /company/{company_id}/alarm/tag:
    post:
      summary: Add/Remove Tag (Incident Based)
      description: Add or remove a tag from an alarm.
      operationId: addRemoveTag
      tags:
      - Incident API V4
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
        description: Company identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tag:
                  type: string
                  description: Tag to add or remove.
                  example: test
                alarm_id:
                  type: integer
                  description: ID of the alarm.
                  example: 123123123
      responses:
        '200':
          description: Tag successfully added or removed.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
      security:
      - ApiKeyAuth: []
  /company/{company_id}/alarm/assignee_options:
    get:
      summary: Get Assignee Options
      description: Returns a list of assignee options for alarms
      operationId: getAssigneeOptions
      tags:
      - Incident API V4
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
        description: Company identifier
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                  items:
                    type: object
                    properties:
                      email:
                        type: string
                        example: test@test.com
                      first_name:
                        type: string
                        example: FirstName
                      id:
                        type: integer
                        example: 2208
                      last_name:
                        type: string
                        example: LastName
                is_success:
                  type: boolean
                  example: true
                message:
                  type: string
                  example: Success
                response_code:
                  type: integer
                  example: 200
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /company/{company_id}/dark-web-monitoring/botnet-data/v2:
    get:
      summary: Botnet Data V2
      description: Platform-Based API. You can get the API Key under the Settings->API
        Options Page
      operationId: getBotnetDataV2
      tags:
      - Dark Web Monitoring API V2
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
      - name: searchString
        in: query
        required: false
        schema:
          type: string
          example: example string
        description: Optional - URL, User
      - name: recordStatus
        in: query
        required: false
        schema:
          type: string
          example: OPEN
        description: Optional- Open, On_hold, Closed
      - name: page
        in: query
        required: false
        schema:
          type: string
          example: '1'
        description: Optional
      - name: alarmid
        in: query
        required: false
        schema:
          type: string
          example: '42260414'
      - name: notificationid
        in: query
        required: false
        schema:
          type: string
      - name: limit
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /company/{company_id}/dark-web-monitoring/blackmarket/v2:
    get:
      summary: Blackmarket V2
      description: Platform-Based API. You can get the API Key under the Settings->API
        Options Page
      operationId: getBlackmarketV2
      tags:
      - Dark Web Monitoring API V2
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
      - name: startDate
        in: query
        required: false
        schema:
          type: string
          example: '2024-10-01'
      - name: endDate
        in: query
        required: false
        schema:
          type: string
          example: '2024-10-31'
      - name: page
        in: query
        required: true
        schema:
          type: string
          example: '1'
        description: Required
      - name: limit
        in: query
        required: false
        schema:
          type: string
          example: '10'
      - name: alarmId
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /company/{company_id}/dark-web-monitoring/suspicious-content/v2:
    get:
      summary: Suspicious Content V2
      description: Platform-Based API. You can get the API Key under the Settings->API
        Options Page
      operationId: getSuspiciousContentV2
      tags:
      - Dark Web Monitoring API V2
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
      - name: startDate
        in: query
        required: false
        schema:
          type: string
          example: '2024-10-01'
      - name: endDate
        in: query
        required: false
        schema:
          type: string
          example: '2024-10-30'
        description: Optional
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /company/{company_id}/dark-web-monitoring/pii-exposure/v2:
    get:
      summary: Pii Exposure V2
      description: Platform-Based API. You can get the API Key under the Settings->API
        Options Page
      operationId: getPiiExposureV2
      tags:
      - Dark Web Monitoring API V2
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
      - name: startDate
        in: query
        required: false
        schema:
          type: string
          example: '2024-10-01'
      - name: endDate
        in: query
        required: false
        schema:
          type: string
          example: '2024-10-30'
        description: Optional
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /company/{company_id}/dark-web-monitoring/im-content/v2:
    get:
      summary: Im Content V2
      description: Platform-Based API. You can get the API Key under the Settings->API
        Options Page
      operationId: getImContentV2
      tags:
      - Dark Web Monitoring API V2
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
      - name: limit
        in: query
        required: false
        schema:
          type: string
          example: '5'
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /leaks/company/{company_id}/latest:
    get:
      summary: PII Exposure (Leak)
      description: Retrieve account leaks related to a company.
      operationId: getPIIExposureLeaks
      tags:
      - Dark Web Monitoring API
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
          example: '{{company_id}}'
      - name: leak_type
        in: query
        required: true
        schema:
          type: string
        example: CUSTOMER
      - name: limit
        in: query
        required: false
        schema:
          type: integer
        example: 50
      - name: page
        in: query
        required: false
        schema:
          type: integer
        example: 1
      - name: start_date
        in: query
        required: false
        schema:
          type: string
          format: date
        example: '2023-01-01'
      - name: end_date
        in: query
        required: false
        schema:
          type: string
          format: date
        example: '2023-01-31'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  type: array
                  items:
                    type: object
                    properties:
                      alarm_id:
                        type: integer
                        example: 1234567
                      company_id:
                        type: string
                        example: '999'
                      consolidated_alarm_id:
                        type: integer
                        example: 987654
                      domain:
                        type: string
                        example: mock.example.com
                      email:
                        type: string
                        example: mock_user@mock.example.com
                      extra_info:
                        type: object
                        properties:
                          history:
                            type: array
                            items:
                              type: object
                              properties:
                                action:
                                  type: string
                                  example: OPEN
                                date:
                                  type: string
                                  example: 2024-10-27 10:00
                                description:
                                  type: string
                                  example: Mock PII Exposure discovered
                                reason:
                                  type: string
                                  example: ''
                                user:
                                  type: string
                                  example: Mock System
                      false_positive_notes:
                        type: string
                        example: ''
                      file_name:
                        type: string
                        example: ''
                      file_unique_id:
                        type: string
                        example: ''
                      id:
                        type: integer
                        example: 99999999
                      index_time:
                        type: string
                        example: ''
                      info:
                        type: string
                        example: ''
                      insert_date:
                        type: string
                        example: '2024-10-27T10:00:00'
                      is_false_positive:
                        type: 'null'
                        example: null
                      leak_type:
                        type: string
                        example: MOCK_LEAK
                      line_number:
                        type: string
                        example: ''
                      password:
                        type: string
                        example: mock_password
                      password_type:
                        type: string
                        example: ''
                      raw_password:
                        type: string
                        example: mock_password
                      source:
                        type: array
                        items:
                          type: string
                        example:
                        - Mock Source
                      tags:
                        type: string
                        example: ''
                      update_date:
                        type: string
                        example: '2024-10-27T10:00:00'
      security:
      - ApiKeyAuth: []
  /company/{company_id}/dark-web-monitoring/request-obtain:
    get:
      summary: Request Obtain
      description: Obtain request API endpoint.
      operationId: getRequestObtain
      tags:
      - Dark Web Monitoring API
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
          example: '{{company_id}}'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: test.request@company.com
                blackmarket_id:
                  type: integer
                  example: 2929220
                notes:
                  type: string
                  example: your notes
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: 'null'
                    example: null
                  is_success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Success
                  response_code:
                    type: integer
                    example: 200
      security:
      - ApiKeyAuth: []
  /company/{company_id}/dark-web-monitoring/blackmarket:
    get:
      summary: Blackmarket
      description: Retrieve data from the black market.
      operationId: getBlackMarketData
      tags:
      - Dark Web Monitoring API
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
          example: '{{company_id}}'
      - name: start_date
        in: query
        required: false
        schema:
          type: string
          format: date
        example: '2023-01-01'
      - name: end_date
        in: query
        required: false
        schema:
          type: string
          format: date
        example: '2023-01-31'
      - name: page
        in: query
        required: true
        schema:
          type: integer
        example: 2
      - name: limit
        in: query
        required: false
        schema:
          type: integer
        example: 100
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  type: array
                  items:
                    type: object
                    properties:
                      blackmarketId:
                        type: string
                        example: Market-1234567
                      discoveryDate:
                        type: string
                        format: date
                        example: '2024-03-18'
                      incidentId:
                        type: string
                        example: https://mockplatform.example.com/alarms/1234567
                      price:
                        type: string
                        example: 50.00 $
                      relatedAssets:
                        type: array
                        items:
                          type: string
                        example:
                        - 10.11.12.13
                      source:
                        type: string
                        example: Mock Market
                      status:
                        type: string
                        example: 'Closed | Reason: Resolved'
                      stealerLogPreview:
                        type: string
                        example: https://mockimage.example.com/mock_screenshot.png
      security:
      - ApiKeyAuth: []
  /company/{company_id}/dark-web-monitoring/suspicious:
    get:
      summary: Suspicious Content
      description: Platform-Based API. You can get the API Key under the Settings->API
        Options Page
      operationId: getSuspiciousContent
      tags:
      - Dark Web Monitoring API
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
      - name: start_date
        in: query
        required: false
        schema:
          type: string
          example: '2024-10-01'
        description: Optional
      - name: end_date
        in: query
        required: false
        schema:
          type: string
          example: '2024-10-30'
        description: Optional
      - name: page
        in: query
        required: false
        schema:
          type: string
          example: '5'
        description: Optional
      - name: limit
        in: query
        required: false
        schema:
          type: string
          example: '1'
        description: Optional
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  type: array
                  items:
                    type: object
                    properties:
                      contentPreview:
                        type: object
                        properties:
                          content:
                            type: string
                            example: 'mockuser@example.com:MockPassword123

                              mocksite.com/mockpath mockuser2:AnotherMockPassword

                              ...'
                          screenshots:
                            type: array
                            items:
                              type: string
                            example: null
                      contentType:
                        type: string
                        example: Suspicious Content
                      discoveryDate:
                        type: string
                        format: date
                        example: '2024-09-20'
                      incidentId:
                        type: string
                        example: https://mockplatform.example.com/incidents/987654
                      source:
                        type: string
                        example: mock_forum.net
                      status:
                        type: string
                        example: 'Open | Reason: Open'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /leaks/company/{company_id}/latest?leak_type=BOTNET MARKET:
    get:
      summary: Botnet Data
      description: Platform-Based API. You can get the API Key under the Settings->API
        Options Page
      operationId: getBotnetData
      tags:
      - Dark Web Monitoring API
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
      - name: start_date
        in: query
        required: false
        schema:
          type: string
          example: '2024-11-05'
      - name: end_date
        in: query
        required: false
        schema:
          type: string
          example: '2024-11-07'
      - name: limit
        in: query
        required: false
        schema:
          type: string
          example: '20'
      - name: page
        in: query
        required: false
        schema:
          type: string
          example: '1'
      - name: leak_type
        in: query
        required: false
        schema:
          type: string
          example: BOTNET MARKET
        description: 'Optional- Default: Employee'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  type: array
                  items:
                    type: object
                    properties:
                      alarm_id:
                        type: integer
                        example: 1234567
                      company_id:
                        type: string
                        example: '999'
                      consolidated_alarm_id:
                        type: integer
                        example: 987654
                      domain:
                        type: string
                        example: mock.example.com
                      email:
                        type: string
                        example: mockuser@mock.example.com
                      extra_info:
                        type: object
                        properties:
                          history:
                            type: array
                            items:
                              type: object
                              properties:
                                action:
                                  type: string
                                  example: OPEN
                                date:
                                  type: string
                                  example: 2024-03-18 14:02
                                description:
                                  type: string
                                  example: Mock PII Exposure discovered
                                reason:
                                  type: string
                                  example: ''
                                user:
                                  type: string
                                  example: Mock System
                      false_positive_notes:
                        type: string
                        example: ''
                      file_name:
                        type: string
                        example: ''
                      file_unique_id:
                        type: string
                        example: ''
                      id:
                        type: integer
                        example: 9999999
                      index_time:
                        type: string
                        example: ''
                      info:
                        type: string
                        example: ''
                      insert_date:
                        type: string
                        example: '2024-03-18T14:02:33'
                      is_false_positive:
                        type: 'null'
                        example: null
                      leak_type:
                        type: string
                        example: MOCK_LEAK
                      line_number:
                        type: string
                        example: ''
                      password:
                        type: string
                        example: mockpassword123
                      password_type:
                        type: string
                        example: ''
                      raw_password:
                        type: string
                        example: mockpassword123
                      source:
                        type: array
                        items:
                          type: string
                        example:
                        - Mock Source
                      tags:
                        type: string
                        example: ''
                      update_date:
                        type: string
                        example: '2024-03-18T14:02:33'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /company/{company_id}/dark-web-monitoring/imcontent:
    get:
      summary: Im Content
      description: Platform-Based API. You can get the API Key under the Settings->API
        Options Page
      operationId: getImContent
      tags:
      - Dark Web Monitoring API
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  type: array
                  items:
                    type: object
                    properties:
                      contentPreview:
                        type: string
                        example: "mock_data_string_123\nmock.example.com\tFALSE\t\
                          /\tTRUE\t1234567890\tmock_field\tmock_value\n..."
                      discoveryDate:
                        type: string
                        format: date
                        example: '2024-09-25'
                      incidentId:
                        type: string
                        example: https://mockplatform.example.com/incidents/1234567
                      keywords:
                        type: array
                        items:
                          type: string
                        example:
                        - mock_keyword
                      source:
                        type: string
                        example: Mock Source
                      status:
                        type: string
                        example: 'Open | Reason: Open'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /threat/analysis:
    get:
      summary: Trigger Threat Analysis Endpoint
      description: 'You can obtain the ‘trust’ score (out of 100) of an entity that
        is calculated based on various threat feed evaluations conducted by SOCRadar.

        This API triggers a threat analysis over an entity. The analysis UID of the
        particular analysis will be returned in JSON format, allowing users to retrieve
        results via the Analysis Result Endpoint.

        If `advance_investigation` is set to `true`, the result will be asynchronous;
        otherwise, it will be served synchronously.


        **Note:** Requires an additional API Key (Pay-Per-Use). Request Limit: 6 requests
        per minute. You can make up to 1500 queries per month.

        '
      operationId: triggerThreatAnalysis
      tags:
      - Threat Analysis API
      parameters:
      - name: entity
        in: query
        required: true
        schema:
          type: string
        example: 2.2.2.2
        description: Entity to analyze (IP, domain, etc.).
      - name: advance_investigation
        in: query
        required: false
        schema:
          type: boolean
        example: false
        description: Whether to perform an advanced investigation.
      - name: force_new_analysis
        in: query
        required: false
        schema:
          type: boolean
        example: true
        description: Force a new analysis instead of fetching cached results.
      - name: key
        in: query
        required: true
        schema:
          type: string
        example: your.threat_analysis_api_key
        description: API Key for authentication.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  analysis_uid:
                    type: string
                    example: 7cfc812e2e9456b810efc0324942a9d
                  status:
                    type: string
                    example: queued
        '400':
          description: Bad request - Invalid parameters.
        '401':
          description: Unauthorized - Invalid or missing API key.
      security:
      - ApiKeyAuth: []
  /threat/analysis/result:
    get:
      summary: Get Threat Analysis Result Endpoint
      description: 'Obtain the result of a triggered threat analysis using the Analysis
        UID. Results are cached for 24 hours unless `force_new_analysis` is set to
        `true`.

        The trust score and threat findings of the queried entity will be given in
        the output. The response includes risk impact details and enrichment fields
        (e.g., WHOIS info, geolocation).


        **Note:** Requires an additional API Key (Pay-Per-Use). Request Limit: 6 requests
        per minute. You can make up to 1500 queries per month.

        '
      operationId: getThreatAnalysisResult
      tags:
      - Threat Analysis API
      parameters:
      - name: analysis_uid
        in: query
        required: true
        schema:
          type: string
        example: 7cfc812e2e9456b810efc0324942a9d
        description: Unique identifier of the analysis.
      - name: key
        in: query
        required: true
        schema:
          type: string
        example: your.threat_analysis_api_key
        description: API Key for authentication.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  trust_score:
                    type: integer
                    example: 85
                  findings:
                    type: array
                    items:
                      type: object
                      properties:
                        category:
                          type: string
                          example: Malware
                        description:
                          type: string
                          example: Detected malicious domain activity
        '400':
          description: Bad request - Invalid parameters.
        '401':
          description: Unauthorized - Invalid or missing API key.
      security:
      - ApiKeyAuth: []
  /threat/analysis/get/triggered/analysis:
    get:
      summary: Get Triggered Threat Analysis List Endpoint
      description: 'Retrieve the list of Analysis UIDs that have been triggered via
        the provided API key.


        **Note:** Requires an additional API Key (Pay-Per-Use). Request Limit: 6 requests
        per minute. You can make up to 1500 queries per month.

        '
      operationId: getTriggeredAnalysisList
      tags:
      - Threat Analysis API
      parameters:
      - name: is_advance_investigation
        in: query
        required: false
        schema:
          type: boolean
        example: true
        description: Filter results for advanced investigations.
      - name: status
        in: query
        required: false
        schema:
          type: string
        example: processed
        description: Filter results by analysis status.
      - name: key
        in: query
        required: true
        schema:
          type: string
        example: your.threat_analysis_api_key
        description: API Key for authentication.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  analysis_list:
                    type: array
                    items:
                      type: string
                      example: 7cfc812e2e9456b810efc0324942a9d
        '400':
          description: Bad request - Invalid parameters.
        '401':
          description: Unauthorized - Invalid or missing API key.
      security:
      - ApiKeyAuth: []
  /threat/actors/get_actor_detail:
    get:
      summary: Get Actor Detail
      description: 'Retrieve details of a specific Threat Actor based on the given
        group name and type.

        Requires an **Additional API Key (Pay-Per-Use License)**.


        **Note:** Request Limit: 1500 queries per year.

        '
      operationId: getActorDetail
      tags:
      - Threat Actor API
      parameters:
      - name: type
        in: query
        required: true
        schema:
          type: string
        example: malware.group
        description: Type of threat actor group.
      - name: group_name
        in: query
        required: true
        schema:
          type: string
        example: Threat Actor Group Name
        description: Name of the threat actor group.
      - name: page
        in: query
        required: false
        schema:
          type: integer
        example: 1
        description: Page number for pagination.
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request - Invalid parameters.
        '401':
          description: Unauthorized - Invalid or missing API key.
      security:
      - ApiKeyAuth: []
  /threat/actors/get_detailed_content:
    get:
      summary: Get Detailed Content
      description: 'Retrieve detailed threat actor intelligence, including IoCs and
        reports.

        Requires an **Additional API Key (Pay-Per-Use License)**.


        **Note:** Request Limit: 1500 queries per year.

        '
      operationId: getDetailedContent
      tags:
      - Threat Actor API
      parameters:
      - name: type
        in: query
        required: true
        schema:
          type: string
        example: malware.group
      - name: group_name
        in: query
        required: true
        schema:
          type: string
        example: Your Group Name
      - name: content_type
        in: query
        required: true
        schema:
          type: string
        example: iocs
      - name: start_date
        in: query
        required: true
        schema:
          type: string
          format: date
        example: '2024-11-01'
      - name: end_date
        in: query
        required: true
        schema:
          type: string
          format: date
        example: '2024-12-01'
      - name: checkpoint
        in: query
        required: false
        schema:
          type: string
        example: '2022-06-50'
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request - Invalid parameters.
        '401':
          description: Unauthorized - Invalid or missing API key.
      security:
      - ApiKeyAuth: []
  /threat/actors/get_actors:
    get:
      summary: Get Groups
      description: 'Retrieve a list of Threat Actor groups based on multiple filters.

        Requires an **Additional API Key (Pay-Per-Use License)**.


        **Note:** Request Limit: 1500 queries per year.

        '
      operationId: getGroups
      tags:
      - Threat Actor API
      parameters:
      - name: type
        in: query
        required: true
        schema:
          type: string
        example: apt_group
      - name: page
        in: query
        required: false
        schema:
          type: integer
        example: 1
      - name: target_sector
        in: query
        required: false
        schema:
          type: string
        example: Energy
      - name: target_country
        in: query
        required: false
        schema:
          type: string
        example: Target Country
      - name: used_cve
        in: query
        required: false
        schema:
          type: string
        example: CVE-2023-4863
      - name: used_malware
        in: query
        required: false
        schema:
          type: string
        example: used_malware
      - name: suspected_state_sponsor
        in: query
        required: false
        schema:
          type: string
        example: India
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request - Invalid parameters.
        '401':
          description: Unauthorized - Invalid or missing API key.
      security:
      - ApiKeyAuth: []
  /company/{companyId}/referrer_logs/submit:
    post:
      summary: Post Referrer Logs
      description: Submit website referrer logs for phishing intelligence detection.
      operationId: postReferrerLogs
      tags:
      - Referer Log API
      parameters:
      - name: companyId
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for the company.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url_list:
                  type: array
                  items:
                    type: string
                    format: uri
                  description: List of URLs found in the referrer logs.
                  example:
                  - https://www.phishing.com
                  - http://test.cn/
                  - http://domain.com/
                  - http://phising.co
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Referrer logs submitted successfully.
        '400':
          description: Bad request. Invalid data format.
        '401':
          description: Unauthorized. API Key is missing or invalid.
      security:
      - ApiKeyAuth: []
  /threat/analysis/file:
    post:
      summary: Malware Analysis API
      description: 'Upload and analyze a file in real-time, up to a maximum of **15
        MB**.

        Requires an **Additional API Key (Enterprise, CTIFORSOC Ultimate License)**.

        '
      operationId: analyzeMalwareFile
      tags:
      - Malware Analysis API
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: Required - File to be analyzed.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  AlertLevel:
                    type: integer
                    example: 0
                  AmsiDetectModuleNames:
                    type: string
                    nullable: true
                  AnalyzerMessage:
                    type: string
                    example: No suspicious indicators were detected.
                  BucketFileInfo:
                    type: string
                    nullable: true
                  Date:
                    type: string
                    format: date-time
                    example: '2025-01-09T16:57:39.087+00:00'
                  DefaultMessage:
                    type: string
                    example: The analysis process has been successfully completed.
                  Detections:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                  FileMD5Hash:
                    type: string
                    example: 39444ae722dc4309a30c6034f7a8f22c
                  FileName:
                    type: string
                    example: mceclip1.png
                  FileSha256Hash:
                    type: string
                    example: de9f135cd9fd1b83f4c5c2330b9c469ce27b7bde7c320f2dfa828ad9c2caa7ca
                  FileSize:
                    type: string
                    example: 100.0 KB
                  FileType:
                    type: string
                    example: Picture File
                  Verdict:
                    type: string
                    example: Clean
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /get/company/{company_id}/brand/protection:
    get:
      summary: Get Brand Protection Data
      description: This API facilitates effortless access to all the data within the
        Brand Protection page.
      operationId: getBrandProtection
      tags:
      - Brand Protection API
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
      - name: type
        in: query
        required: false
        schema:
          type: string
          example: 'Brand Protection Types: impersonating_domains, social_media_findings,
            impersonating_accounts, rogue_mobile_applications, bad_reputations'
        description: Optional
      - name: status
        in: query
        required: false
        schema:
          type: string
          example: 'Status Lists: previously_registered,founded,approved,requested,in_progress,partially_done,done,closed,
            false_positive,processed_internally,declined'
        description: Optional
      - name: email
        in: query
        required: true
        schema:
          type: string
          example: socradaruser@test.com
        description: Required
      - name: page
        in: query
        required: false
        schema:
          type: integer
          example: 1
        description: Optional, Default:1
      - name: filter_options
        in: query
        required: false
        schema:
          type: string
          example: screenshot
        description: Optional
      - name: takedown_progress
        in: query
        required: false
        schema:
          type: string
          example: requested
        description: Optional
      - name: platform
        in: query
        required: false
        schema:
          type: string
          example: twitter
        description: Optional
      - name: start_date
        in: query
        required: false
        schema:
          type: string
          format: date
          example: '2024-09-23'
        description: Optional
      - name: end_date
        in: query
        required: false
        schema:
          type: string
          format: date
          example: '2024-09-23'
        description: Optional
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  takedown_info:
                    type: object
                    properties:
                      abuse_type:
                        type: string
                        example: potential_phishing
                      active:
                        type: boolean
                        example: true
                      approved_by:
                        type: string
                        example: mock.user@example.com
                      asset_status:
                        type: integer
                        example: 4
                      company_id:
                        type: integer
                        example: 0
                      phishing_domain:
                        type: string
                        example: mockphishingdomain.com
                      phishing_score:
                        type: integer
                        example: 15
                      status:
                        type: string
                        enum:
                        - open
                        - pending_takedown
                        - closed
                        - false_positive
                        example: pending_takedown
                      insert_date:
                        type: string
                        format: date-time
                        example: '2025-02-17T08:22:59.804307'
                      update_date:
                        type: string
                        format: date-time
                        example: '2025-02-17T09:51:59.073793'
                      reported_by:
                        type: string
                        example: mock.user@example.com
                      matched_keywords:
                        type: array
                        items:
                          type: string
                        example:
                        - MOCKKeyword
                        - AnotherMockKeyword
                      history:
                        type: array
                        items:
                          type: object
                          properties:
                            action:
                              type: string
                              example: OPEN
                            date:
                              type: string
                              format: date-time
                              example: 2025-02-17 08:22
                            description:
                              type: string
                              example: Mock domain was added
                            reason:
                              type: string
                              example: PENDING_TAKEDOWN
                            user:
                              type: string
                              example: mock.user@example.com
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /get/company/{company_id}/brand/protection/download:
    get:
      summary: Download Brand Protection Data
      description: This API facilitates effortless access to all the data within the
        Brand Protection page.
      operationId: getBrandProtection
      tags:
      - Brand Protection API
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
      - name: risk_type
        in: query
        required: false
        schema:
          type: string
          example: 'Brand Protection Types: impersonating_domains, social_media_findings,
            impersonating_accounts, rogue_mobile_applications, bad_reputations'
        description: Optional
      - name: email
        in: query
        required: true
        schema:
          type: string
          example: example@email.com
        description: Required
      - name: start_date
        in: query
        required: false
        schema:
          type: string
          format: date
          example: '2024-09-23'
        description: Optional
      - name: end_date
        in: query
        required: false
        schema:
          type: string
          format: date
          example: '2024-09-23'
        description: Optional
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /company/{company_id}/brand-protection/impersonating-accounts/v2:
    get:
      summary: Get Impersonating Accounts
      description: Retrieve data related to impersonating accounts.
      operationId: getImpersonatingAccounts
      tags:
      - Brand Protection API V2
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
          example: '{{company_id}}'
      - name: searchString
        in: query
        required: false
        schema:
          type: string
        description: Optional search filter.
      - name: recordStatus
        in: query
        required: false
        schema:
          type: string
          example: OPEN,CLOSED,ON_HOLD
      - name: recordStatusReason
        in: query
        required: false
        schema:
          type: string
          example: INVESTIGATING
      - name: takedownPendingStatus
        in: query
        required: false
        schema:
          type: string
          example: REQUESTED
      - name: platform
        in: query
        required: false
        schema:
          type: string
          example: TWITTER
      - name: alarmStatus
        in: query
        required: false
        schema:
          type: string
          example: OPEN
      - name: alarmId
        in: query
        required: false
        schema:
          type: integer
          example: 100
      - name: notificationId
        in: query
        required: false
        schema:
          type: integer
          example: 200
      - name: hasRelatedAlarm
        in: query
        required: false
        schema:
          type: boolean
          example: true
      - name: includeHistory
        in: query
        required: false
        schema:
          type: boolean
          example: true
      - name: startDate
        in: query
        required: false
        schema:
          type: string
          example: '2024-01-01'
      - name: endDate
        in: query
        required: false
        schema:
          type: string
          example: '2024-02-01'
      - name: page
        in: query
        required: false
        schema:
          type: integer
          example: 1
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          example: 100
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  type: array
                  items:
                    type: object
                    properties:
                      account:
                        type: string
                        example: mock_account_123
                      alarmId:
                        type: integer
                        example: 9876543
                      comments:
                        type: 'null'
                        example: null
                      description:
                        type: 'null'
                        example: null
                      discoveryDate:
                        type: string
                        format: date
                        example: '2024-07-20'
                      followers:
                        type: 'null'
                        example: null
                      following:
                        type: 'null'
                        example: null
                      history:
                        type: array
                        items:
                          type: object
                          properties:
                            date:
                              type: string
                              example: 2024-07-20 11:22
                            detail:
                              type: string
                              example: Mock impersonation account discovered.
                            operator:
                              type: string
                              example: Mock Security System
                      notificationId:
                        type: integer
                        example: 1234567
                      platform:
                        type: string
                        example: mock_platform
                      relatedAlarm:
                        type: object
                        properties:
                          status:
                            type: string
                            example: Open
                          url:
                            type: string
                            example: https://mock.example.com/alarms/9876543
                      screenshot:
                        type: 'null'
                        example: null
                      status:
                        type: string
                        example: Open
                      statusReason:
                        type: string
                        example: ' Open'
                      takedownProgress:
                        type: 'null'
                        example: null
                      url:
                        type: string
                        example: https://mock.example.com/mock_account_123
                      userName:
                        type: string
                        example: mock_user_name
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /company/{company_id}/brand-protection/impersonating-domains/v2:
    get:
      summary: Get Impersonating Domains
      description: Retrieve data related to impersonating domains.
      operationId: getImpersonatingDomains
      tags:
      - Brand Protection API V2
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
          example: '{{company_id}}'
      - name: searchString
        in: query
        required: false
        schema:
          type: string
        description: Optional search filter.
      - name: recordStatus
        in: query
        required: false
        schema:
          type: string
          example: OPEN,CLOSED,ON_HOLD
      - name: recordStatusReason
        in: query
        required: false
        schema:
          type: string
          example: INVESTIGATING
      - name: takedownPendingStatus
        in: query
        required: false
        schema:
          type: string
          example: REQUESTED
      - name: alarmStatus
        in: query
        required: false
        schema:
          type: string
          example: OPEN
      - name: notificationId
        in: query
        required: false
        schema:
          type: integer
          example: 200
      - name: orderDir
        in: query
        required: false
        schema:
          type: string
          example: desc
      - name: source
        in: query
        required: false
        schema:
          type: string
          example: NEW_REGISTRATION
      - name: screenshot
        in: query
        required: false
        schema:
          type: boolean
          example: true
      - name: dnsARecords
        in: query
        required: false
        schema:
          type: boolean
          example: true
      - name: startDate
        in: query
        required: false
        schema:
          type: string
          example: '2024-01-01'
      - name: endDate
        in: query
        required: false
        schema:
          type: string
          example: '2024-02-01'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  takedown_info:
                    type: object
                    properties:
                      alarm_id:
                        type: string
                        example: null
                      comments:
                        type: array
                        items:
                          type: object
                          properties:
                            date:
                              type: string
                              format: date-time
                              example: 2025-02-17 08:23
                            message:
                              type: string
                              example: This takedown started from the Cypress API
                                Automation Test by Mock User. If you have any questions,
                                you can contact me.
                            sender:
                              type: string
                              example: SOCRadar
                      discovery_date:
                        type: string
                        format: date-time
                        example: '2025-02-17T08:22:59.804307'
                      dns_a_record:
                        type: string
                        example: ''
                      dns_mx_record:
                        type: string
                        example: ''
                      dns_ns_record:
                        type: string
                        example: ''
                      history:
                        type: array
                        items:
                          type: object
                          properties:
                            date:
                              type: string
                              format: date-time
                              example: 2025-02-17 08:22
                            detail:
                              type: string
                              example: Mock domain was added
                            operator:
                              type: string
                              example: SOCRadar
                      html_title:
                        type: string
                        example: null
                      impersonating_domain:
                        type: string
                        example: mockphishingdomain.com
                      is_parked:
                        type: boolean
                        example: false
                      login_form:
                        type: boolean
                        example: false
                      matched_keyword:
                        type: string
                        example: MOCKKeyword
                      notification_id:
                        type: string
                        example: null
                      ocr_matches:
                        type: string
                        example: null
                      phishing_score:
                        type: integer
                        example: 15
                      related_alarm:
                        type: string
                        example: null
                      screenshot:
                        type: array
                        items:
                          type: string
                        example: []
                      source:
                        type: string
                        example: MANUAL
                      ssl_info:
                        type: string
                        example: null
                      status:
                        type: string
                        example: On Hold
                      status_reason:
                        type: string
                        example: Pending Takedown
                      takedown_progress:
                        type: string
                        example: Requested
                      website_status:
                        type: string
                        example: Passive
                      whois:
                        type: object
                        example: {}
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /company/{company_id}/brand-protection/rogue-mobile-applications/v2:
    get:
      summary: Get Rogue Mobile Applications
      description: Retrieve data related to rogue mobile applications.
      operationId: getRogueMobileApplications
      tags:
      - Brand Protection API V2
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
          example: '{{company_id}}'
      - name: searchString
        in: query
        required: false
        schema:
          type: string
        description: Optional search filter.
      - name: recordStatus
        in: query
        required: false
        schema:
          type: string
          example: OPEN,CLOSED,ON_HOLD
      - name: recordStatusReason
        in: query
        required: false
        schema:
          type: string
          example: INVESTIGATING
      - name: takedownPendingStatus
        in: query
        required: false
        schema:
          type: string
          example: REQUESTED
      - name: alarmStatus
        in: query
        required: false
        schema:
          type: string
          example: OPEN
      - name: alarmId
        in: query
        required: false
        schema:
          type: integer
          example: 100
      - name: notificationId
        in: query
        required: false
        schema:
          type: integer
          example: 200
      - name: includeHistory
        in: query
        required: false
        schema:
          type: boolean
          example: true
      - name: startDate
        in: query
        required: false
        schema:
          type: string
          example: '2024-01-01'
      - name: endDate
        in: query
        required: false
        schema:
          type: string
          example: '2024-02-01'
      - name: page
        in: query
        required: false
        schema:
          type: integer
          example: 1
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          example: 100
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  type: array
                  items:
                    type: object
                    properties:
                      alarmId:
                        type: integer
                        example: 1234567
                      appName:
                        type: string
                        example: Mock App Name
                      comments:
                        type: 'null'
                        example: null
                      description:
                        type: string
                        example: 'Mock app description.  Category: Mock Category.
                          Size: Mock Size.'
                      discoveryDate:
                        type: string
                        format: date
                        example: '2024-07-22'
                      history:
                        type: array
                        items:
                          type: object
                          properties:
                            date:
                              type: string
                              example: 2024-07-22 15:47
                            detail:
                              type: string
                              example: Mock Rogue Mobile Application discovered.
                            operator:
                              type: string
                              example: Mock Security System
                      market:
                        type: string
                        example: mock_market.com
                      notificationId:
                        type: integer
                        example: 9876543
                      relatedAlarm:
                        type: object
                        properties:
                          status:
                            type: string
                            example: Open
                          url:
                            type: string
                            example: https://mock.example.com/alarms/1234567
                      status:
                        type: string
                        example: Open
                      statusReason:
                        type: string
                        example: ' Open'
                      takedownProgress:
                        type: 'null'
                        example: null
                      url:
                        type: string
                        example: https://mock.example.com/mock_app
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /company/{company_id}/brand-protection/bad-reputation/v2:
    get:
      summary: Get Bad Reputation Data
      description: Retrieve data shared on the Bad Reputation page.
      operationId: getBadReputationData
      tags:
      - Brand Protection API V2
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
          example: '{{company_id}}'
      - name: searchString
        in: query
        required: false
        schema:
          type: string
        description: Optional search filter.
      - name: recordStatus
        in: query
        required: false
        schema:
          type: string
          example: OPEN,CLOSED,ON_HOLD
      - name: recordStatusReason
        in: query
        required: false
        schema:
          type: string
          example: INVESTIGATING
      - name: alarmStatus
        in: query
        required: false
        schema:
          type: string
          example: OPEN,CLOSED,ON_HOLD
      - name: alarmId
        in: query
        required: false
        schema:
          type: integer
          example: 100
      - name: notificationId
        in: query
        required: false
        schema:
          type: integer
          example: 200
      - name: includeHistory
        in: query
        required: false
        schema:
          type: boolean
          example: true
      - name: startDate
        in: query
        required: false
        schema:
          type: string
          example: '2024-01-01'
      - name: endDate
        in: query
        required: false
        schema:
          type: string
          example: '2024-02-01'
      - name: page
        in: query
        required: false
        schema:
          type: integer
          example: 1
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          example: 100
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  type: array
                  items:
                    type: object
                    properties:
                      alarmId:
                        type: integer
                        example: 1234567
                      asset:
                        type: string
                        example: 10.20.30.40
                      category:
                        type: string
                        example: Suspicious Login Attempt
                      description:
                        type: string
                        example: Multiple failed login attempts from an unusual location
                          were detected for user 'johndoe'.
                      firstSeen:
                        type: string
                        format: date
                        example: '2024-03-15'
                      history:
                        type: array
                        items:
                          type: object
                          properties:
                            date:
                              type: string
                              example: 2024-03-15 14:32
                            detail:
                              type: string
                              example: Initial detection of suspicious login activity.
                            operator:
                              type: string
                              example: Security System
                      lastSeen:
                        type: string
                        format: date
                        example: '2024-03-15'
                      maintainer:
                        type: string
                        example: SecOps Team
                      notificationId:
                        type: integer
                        example: 9876543
                      relatedAlarm:
                        type: object
                        properties:
                          status:
                            type: string
                            example: Resolved
                          url:
                            type: string
                            example: https://security.example.com/alarms/1234567
                      status:
                        type: string
                        example: Resolved
                      statusReason:
                        type: string
                        example: ' Resolved - User confirmed legitimate activity.'
                      updateFrequency:
                        type: string
                        example: 1 hour
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /company/{company_id}/brand-protection/social-media-findings/v2:
    get:
      summary: Get Social Media Findings
      description: Retrieve data related to social media threats and findings.
      operationId: getSocialMediaFindings
      tags:
      - Brand Protection API V2
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
          example: '{{company_id}}'
      - name: searchString
        in: query
        required: false
        schema:
          type: string
        description: Optional search filter.
      - name: recordStatus
        in: query
        required: false
        schema:
          type: string
          example: OPEN,CLOSED,ON_HOLD
      - name: recordStatusReason
        in: query
        required: false
        schema:
          type: string
          example: INVESTIGATING
      - name: alarmStatus
        in: query
        required: false
        schema:
          type: string
          example: OPEN
      - name: alarmId
        in: query
        required: false
        schema:
          type: integer
          example: 100
      - name: notificationId
        in: query
        required: false
        schema:
          type: integer
          example: 200
      - name: includeHistory
        in: query
        required: false
        schema:
          type: boolean
          example: true
      - name: startDate
        in: query
        required: false
        schema:
          type: string
          example: '2024-01-01'
      - name: endDate
        in: query
        required: false
        schema:
          type: string
          example: '2024-02-01'
      - name: page
        in: query
        required: false
        schema:
          type: integer
          example: 1
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          example: 100
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  type: array
                  items:
                    type: object
                    properties:
                      alarmId:
                        type: integer
                        example: 9876543
                      discoveryDate:
                        type: string
                        format: date
                        example: '2024-09-15'
                      finding:
                        type: string
                        example: Mock security researchers have identified a potential
                          data leak related to 'Mock Company X' on a popular forum.  [mock
                          link]
                      history:
                        type: array
                        items:
                          type: object
                          properties:
                            date:
                              type: string
                              example: 2024-09-15 10:00
                            detail:
                              type: string
                              example: Mock Social Media Finding discovered.
                            operator:
                              type: string
                              example: Mock Security System
                      keywords:
                        type: array
                        items:
                          type: string
                        example:
                        - mock_keyword_1
                        - mock_keyword_2
                      notificationId:
                        type: integer
                        example: 1234567
                      relatedAlarm:
                        type: object
                        properties:
                          status:
                            type: string
                            example: Open
                          url:
                            type: string
                            example: https://mock.example.com/alarms/9876543
                      screenshot:
                        type: string
                        example: https://mock.example.com/mock_screenshot.png
                      status:
                        type: string
                        example: Open
                      statusReason:
                        type: string
                        example: ' Open'
                      url:
                        type: string
                        example: https://mock.social.media/mock_user/mock_post_id
        '400':
          description: Bad request
        '401':
          description: Unauthorized
      security:
      - ApiKeyAuth: []
  /get/company/{company_id}/surface_web_monitoring:
    get:
      summary: Surface Web Monitoring
      description: 'This API facilitates effortless access to all the data within
        the Surface Web Monitoring page.

        It provides details on how to use the API to submit, monitor, and retrieve
        Surface Web Monitoring data.

        Results are available on both the **platform** and **email**.

        '
      operationId: getSurfaceWebMonitoring
      tags:
      - Surface Web Monitoring API
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        example: '{{company_id}}'
        description: Unique identifier of the company.
      - name: page
        in: query
        required: true
        schema:
          type: integer
          default: 1
        description: Page number for pagination.
      - name: search
        in: query
        required: true
        schema:
          type: string
        example: https://github.com/testx/tet
        description: URL or keyword to search for in Surface Web Monitoring.
      - name: start_date
        in: query
        required: true
        schema:
          type: string
          format: date
        example: '2023-07-06'
        description: Start date for monitoring results.
      - name: end_date
        in: query
        required: true
        schema:
          type: string
          format: date
        example: '2023-07-07'
        description: End date for monitoring results.
      - name: record_status
        in: query
        required: false
        schema:
          type: string
        example: OPEN
        description: Filter results by record status.
      - name: record_status_reason
        in: query
        required: false
        schema:
          type: string
        example: OPEN
        description: Reason for the record status.
      - name: alarm_status
        in: query
        required: false
        schema:
          type: string
        example: OPEN
        description: Filter results by alarm status.
      - name: record_source
        in: query
        required: false
        schema:
          type: string
        example: Bitbucket
        description: Source of the record.
      - name: takedown_pending_status
        in: query
        required: false
        schema:
          type: string
        example: IN_PROGRESS
        description: Status of the takedown request.
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request - Invalid parameters.
        '401':
          description: Unauthorized - Invalid or missing API key.
      security:
      - ApiKeyAuth: []
  /get_vip_protection:
    get:
      summary: Get Latest VIP Protection Data
      description: Retrieve the latest leaked data records related to VIP employees
        within a company.
      operationId: getVipProtection
      tags:
      - VIP Protection API
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for the company.
        example: '{{company_id}}'
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 20
        description: Maximum number of results to return.
      - name: start_date
        in: query
        required: false
        schema:
          type: string
          format: date
        description: Filter leaks from this start date (YYYY-MM-DD).
        example: '2023-01-01'
      - name: end_date
        in: query
        required: false
        schema:
          type: string
          format: date
        description: Filter leaks up to this end date (YYYY-MM-DD).
        example: '2023-01-31'
      - name: page
        in: query
        required: false
        schema:
          type: integer
          default: 1
        description: Page number for pagination.
      - name: leak_type
        in: query
        required: true
        schema:
          type: string
        description: Type of leak data to retrieve.
        example: VIP EMPLOYEE
      responses:
        '200':
          description: Successful response with leak data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_records:
                    type: integer
                    example: 50
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        leak_id:
                          type: string
                          example: abc123
                        leak_type:
                          type: string
                          example: VIP EMPLOYEE
                        detected_date:
                          type: string
                          format: date-time
                          example: '2023-01-10T12:34:56Z'
                        source:
                          type: string
                          example: Dark Web Forum
                        details:
                          type: string
                          example: Leaked credentials for CEO email account found.
        '400':
          description: Bad request. Invalid query parameters.
        '401':
          description: Unauthorized. API Key is missing or invalid.
      security:
      - ApiKeyAuth: []
  /company/{company_id}/asm/get/cloudBuckets:
    get:
      summary: Get Cloud Buckets
      description: Retrieves cloud storage buckets associated with the company.
      operationId: getCloudBuckets
      tags:
      - Digital Footprint API
      responses:
        '200':
          description: Successfully retrieved cloud buckets.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized. API Key is missing or invalid.
      security:
      - ApiKeyAuth: []
  /company/{company_id}/asm/fp:
    post:
      summary: Mark Asset as False Positive
      description: 'Marks an asset as a false positive,

        preventing it from being flagged in future security scans.

        '
      operationId: markAssetFalsePositive
      tags:
      - Digital Footprint API
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for the company.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                asset_id:
                  type: integer
                  description: ID of the asset to be marked as false positive.
                  example: 1
                asset_type:
                  type: string
                  description: Type of the asset (e.g., domain, IP, certificate).
                  example: domain
                sub_type:
                  type: string
                  description: Sub-category of the asset type.
                  example: networkApp
                notes:
                  type: string
                  description: Additional notes for marking as false positive.
                  example: False positive due to known safe asset
      responses:
        '200':
          description: Asset successfully marked as false positive.
        '400':
          description: Bad request. Invalid parameters.
        '401':
          description: Unauthorized. API Key is missing or invalid.
      security:
      - ApiKeyAuth: []
  /company/{company_id}/asm/add/{asset_type}:
    post:
      summary: Add Assets
      description: Adds a new asset (e.g., domain, IP, SSL certificate) to the monitoring
        system.
      operationId: addAssets
      tags:
      - Digital Footprint API
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for the company.
      - name: asset_type
        in: path
        required: true
        schema:
          type: string
        description: Type of the asset being added.
        example: domain
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                domain:
                  type: string
                  description: Domain name.
                  example: domain.com
                asset_name:
                  type: string
                  description: Name of the asset.
                  example: mydomain.com
                domain_type:
                  type: string
                  description: Domain classification.
                  example: ALTERNATE,MAINDOMAIN
                source:
                  type: string
                  description: Source from where the asset was obtained.
                  example: same_whois
      responses:
        '200':
          description: Asset successfully added.
        '400':
          description: Bad request. Invalid data format.
        '401':
          description: Unauthorized. API Key is missing or invalid.
      security:
      - ApiKeyAuth: []
  /company/{company_id}/asm/monitor:
    post:
      summary: Disable or Enable Monitoring for an Asset
      description: Enables or disables monitoring for a specific asset.
      operationId: disableEnableMonitoring
      tags:
      - Digital Footprint API
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for the company.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                asset_id:
                  type: string
                  description: ID of the asset to be updated.
                  example: '12345'
                asset_type:
                  type: string
                  description: Type of the asset.
                  example: domain
                sub_type:
                  type: string
                  description: Sub-category of the asset.
                  example: networkApp
                is_monitor_on:
                  type: boolean
                  description: true / false
                  example: true
      responses:
        '200':
          description: Monitoring setting updated successfully.
        '400':
          description: Bad request. Invalid input.
        '401':
          description: Unauthorized. API Key is missing or invalid.
      security:
      - ApiKeyAuth: []
  /company/{company_id}/asm:
    get:
      summary: Get Digital Assets
      description: Retrieves digital assets for a given company.
      operationId: getDigitalAssets
      tags:
      - Digital Footprint API
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for the company.
      - name: assetType
        in: query
        required: false
        schema:
          type: string
          example: '''domain'', ''ipAddress'', ''website'', ''loginPage'', ''dnsRecord'',
            ''sslCertificate'', ''ipBlock'', ''mobileApplication'', ''technology'',
            ''cloudBuckets'', ''socialAccounts'', ''sourceCodeRepo'''
        description: Filter by asset type.
      - name: pageNumber
        in: query
        required: false
        schema:
          type: string
          example: '1'
        description: 'Default: 0'
      - name: pageLimit
        in: query
        required: false
        schema:
          type: string
          example: '100'
        description: 'Default: 100'
      - name: sortBy
        in: query
        required: false
        schema:
          type: string
          example: 'valid_field_name: assetName, assetType'
      - name: sortDesc
        in: query
        required: false
        schema:
          type: string
          example: True or False
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  asset:
                    type: object
                    properties:
                      assetID:
                        type: integer
                        example: 1234567
                      assetName:
                        type: string
                        example: example.com
                      assetType:
                        type: string
                        example: Domain
                      assetTypeID:
                        type: string
                        example: domain
                      discoveryDate:
                        type: string
                        format: date-time
                        example: '2025-03-01T10:00:00Z'
                      isFalsePositive:
                        type: boolean
                        example: false
                      isMonitor:
                        type: boolean
                        example: true
                      subTypeID:
                        type: string
                        example: sub_type_1
                      tags:
                        type: array
                        items:
                          type: string
                        example:
                        - tag1
                        - tag2
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
      security:
      - ApiKeyAuth: []
  /company/{company_id}/asm/add/cloudBuckets:
    post:
      summary: Add Cloud Buckets
      description: 'Add cloud storage buckets (e.g., AWS S3, GCP Buckets) to

        the digital footprint monitoring system.

        '
      operationId: addCloudBuckets
      tags:
      - Digital Footprint API
      parameters:
      - name: company_id
        in: path
        required: true
        schema:
          type: string
        description: Unique identifier for the company.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                asset_name:
                  type: string
                  description: Cloud storage bucket URL.
                  example: https://testtt.bucket.gcp.com/
                cloud_platform_name:
                  type: string
                  description: Cloud provider platform name.
                  example: Amazon S3 Buckets
                access_state:
                  type: string
                  description: Access permission state of the bucket.
                  example: public
                service_name:
                  type: string
                  description: Service name for the cloud storage.
                  example: gcp.functions.response_list
      responses:
        '200':
          description: Cloud bucket successfully added.
        '400':
          description: Bad request. Invalid data format.
        '401':
          description: Unauthorized. API Key is missing or invalid.
      security:
      - ApiKeyAuth: []
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: API-Key
      description: API key for authentication
tags:
- name: ASM Vulnerabilities API
  description: "- Platform-Based API. You can get the API Key under the Settings->API\
    \ Options Page\n- overview: |\n  - Comprehensive vulnerability management and\
    \ assessment platform\n  - Real-time vulnerability detection and monitoring\n\
    - target_audience: |\n  - Security teams\n  - System administrators\n  - Risk\
    \ managers\n  - Compliance officers\n- use_cases: |\n  - Asset discovery\n  -\
    \ Vulnerability scanning\n  - Risk assessment\n  - Compliance monitoring\n- conclusion:\
    \ Fundamental tool for maintaining visibility of organizational attack surface\n"
- name: Brand Protection API
  description: "- Platform-Based API. You can get the API Key under the Settings->API\
    \ Options Page\n- overview: |\n  - Monitors and protects brand presence across\
    \ digital channels.\n- target_audience: \n  - Brand managers\n  - Marketing teams\n\
    \  - Security teams\n  - Compliance officers\n- use_cases: \n  - Brand impersonation\
    \ detection\n  - Domain monitoring\n  - Social media protection\n  - Counterfeit\
    \ detection\n- conclusion: Essential for protecting brand integrity in digital\
    \ spaces.\n"
- name: Brand Protection API V2
  description: "- Platform-Based API. You can get the API Key under the Settings->API\
    \ Options Page\n- overview: |\n  - Monitors and protects brand presence across\
    \ digital channels.\n- target_audience: \n  - Brand managers\n  - Marketing teams\n\
    \  - Security teams\n  - Compliance officers\n- use_cases: \n  - Brand impersonation\
    \ detection\n  - Domain monitoring\n  - Social media protection\n  - Counterfeit\
    \ detection\n- conclusion: Essential for protecting brand integrity in digital\
    \ spaces.\n"
- name: Surface Web Monitoring API
  description: "- Platform-Based API. You can get the API Key under the Settings->API\
    \ Options Page\n- overview: |\n  - Monitors public web sources for threats\n \
    \ - Tracks brand mentions and exposures\n- target_audience: |\n  - Security teams\n\
    \  - Brand managers\n  - Marketing teams\n  - Risk analysts\n- use_cases: |\n\
    \  - Brand monitoring\n  - Threat detection\n  - Content tracking\n  - Exposure\
    \ analysis\n- conclusion: Important for maintaining visibility of public web presence\n"
- name: Dark Web Monitoring API
  description: "- Platform-Based API. You can get the API Key under the Settings->API\
    \ Options Page\n- overview: |\n  - Monitors dark web for organizational data exposure\n\
    \  - Tracks underground markets and forums\n- target_audience: |\n  - Security\
    \ analysts\n  - Threat hunters\n  - Risk managers\n  - Compliance teams\n- use_cases:\
    \ |\n  - Credential exposure monitoring\n  - Data leak detection\n  - Threat intelligence\
    \ gathering\n  - Underground market monitoring\n- conclusion: Critical for maintaining\
    \ awareness of dark web threats\n"
- name: Dark Web Monitoring API V2
  description: "- Platform-Based API. You can get the API Key under the Settings->API\
    \ Options Page\n- overview: |\n  - Enhanced dark web intelligence platform\n \
    \ - Advanced threat detection and monitoring\n- target_audience: |\n  - Threat\
    \ intelligence analysts\n  - Dark web researchers\n  - Security operations teams\n\
    \  - Risk management specialists\n- use_cases: |\n  - Advanced threat detection\n\
    \  - Data leak monitoring\n  - Criminal activity tracking\n  - Strategic intelligence\
    \ gathering\n- conclusion: Critical for comprehensive dark web threat intelligence\n"
- name: Referer Log API
  description: "- Platform-Based API. You can get the API Key under the Settings->API\
    \ Options Page\n- overview: |\n  - Advanced web traffic analysis and phishing\
    \ detection\n  - Real-time referrer log monitoring\n  - Automated phishing intelligence\
    \ detection\n  - Traffic pattern analysis\n- target_audience: |\n  - Security\
    \ teams\n  - Web administrators\n  - Threat analysts\n  - SOC teams\n  - Website\
    \ security managers\n- use_cases: |\n  - Phishing detection\n  - Traffic analysis\n\
    \  - Threat intelligence\n  - Website security\n  - Malicious referrer detection\n\
    \  - Automated alert generation\n  - Traffic pattern monitoring\n- Security incident\
    \ investigation\n- conclusion: Essential for detecting and preventing phishing\
    \ attacks and maintaining web security\n"
- name: Digital Footprint API
  description: "- Platform-Based API. You can get the API Key under the Settings->API\
    \ Options Page\n- overview: |\n  - Comprehensive digital asset discovery and monitoring\n\
    \  - Shadow IT detection and management\n- target_audience: |\n  - IT administrators\n\
    \  - Security teams\n  - Asset managers\n  - Risk analysts\n- use_cases: |\n \
    \ - Asset discovery\n  - Shadow IT detection\n  - Cloud resource monitoring\n\
    \  - Digital presence management\n- conclusion: Essential for maintaining comprehensive\
    \ visibility of digital assets\n"
- name: VIP Protection API
  description: "- Platform-Based API. You can get the API Key under the Settings->API\
    \ Options Page\n- overview: |\n  - Monitors and protects high-value individuals\n\
    \  - Tracks potential threats and exposures\n- target_audience: |\n  - Executive\
    \ protection teams\n  - Security managers\n  - Risk analysts\n  - Compliance officers\n\
    - use_cases: |\n  - Executive monitoring\n  - Threat detection\n  - Privacy protection\n\
    \  - Risk assessment\n- conclusion: Critical for protecting key personnel and\
    \ executives\n"
- name: DRP Fraud Protection API
  description: "- Platform-Based API. You can get the API Key under the Settings->API\
    \ Options Page\n- overview: |\n  - Digital risk protection platform\n  - Fraud\
    \ detection and prevention\n- target_audience: |\n  - Fraud analysts\n  - Risk\
    \ management teams\n  - Security operations\n  - Compliance officers\n- use_cases:\
    \ |\n  - Digital fraud prevention\n  - Risk assessment\n  - Compliance monitoring\n\
    \  - Transaction security\n- conclusion: Essential for protecting against digital\
    \ fraud and risks\n"
- name: DRP Fraud Protection API V2
  description: "- Platform-Based API. You can get the API Key under the Settings->API\
    \ Options Page\n- overview: |\n  - Digital risk protection platform\n  - Fraud\
    \ detection and prevention\n- target_audience: |\n  - Fraud analysts\n  - Risk\
    \ management teams\n  - Security operations\n  - Compliance officers\n- use_cases:\
    \ |\n  - Digital fraud prevention\n  - Risk assessment\n  - Compliance monitoring\n\
    \  - Transaction security\n- conclusion: Essential for protecting against digital\
    \ fraud and risks\n"
- name: Incident API V2
  description: "- Platform-Based API. You can get the API Key under the Settings->API\
    \ Options Page\n- overview: |\n  - Real-time incident response platform\n  - Notification\
    \ based and HTML Formattting API. Especially useful for web applications and mobile\
    \ platforms.\n  - Incident detection and tracking\n- target_audience: |\n  - SOC\
    \ teams\n  - Incident responders\n  - Security analysts\n  - IT operations teams\n\
    - use_cases: |\n  - Incident tracking\n  - Alert management\n  - Response coordination\n\
    - conclusion: Essential for effective incident response\n"
- name: Incident API V3
  description: "- Platform-Based API. You can get the API Key under the Settings->API\
    \ Options Page\n- overview: |\n  - Advanced incident management platform\n  -\
    \ Real-time alert handling and tracking\n- target_audience: |\n  - SOC teams\n\
    \  - Incident responders\n  - Security analysts\n  - IT operations teams\n- use_cases:\
    \ |\n  - Incident tracking\n  - Alert management\n  - Response coordination\n\
    \  - Security workflow automation\n- conclusion: Critical for effective incident\
    \ response and management\n"
- name: Incident API V4
  description: "- Platform-Based API. You can get the API Key under the Settings->API\
    \ Options Page\n- overview: |\n   - Advanced incident management and response\n\
    \   - Real-time alert handling and tracking\n   - Enhanced workflow automation\n\
    \   - Incident ID Based API\n- target_audience: |\n   - SOC teams\n   - Incident\
    \ responders\n   - Security analysts\n   - IT operations teams\n- use_cases: |\n\
    \   - Incident tracking\n   - Alert triage\n   - Response coordination\n   - Team\
    \ collaboration\n   - Status management\n   - Comment handling\n- conclusion:\
    \ Essential for modern incident response and management\n"
- name: Takedown API
  description: "- Platform-Based API. You can get the API Key under the Settings->API\
    \ Options Page\n- overview: |\n  - Automated takedown request management\n   \
    \ - Multi-platform takedown coordination\n  - Real-time status tracking\n  - Integrated\
    \ workflow management\n- target_audience: |\n  - Security teams\n  - Brand protection\
    \ teams\n  - Legal departments\n  - Incident response teams\n  - Digital risk\
    \ managers\n- use_cases: |\n  - Phishing site takedowns\n  - Malicious domain\
    \ removal\n  - Brand impersonation mitigation\n  - Social media account takedowns\n\
    \  - Source code leak remediation\n- conclusion: Essential for rapid response\
    \ to and removal of malicious online content\n"
- name: User Audit Logs API
  description: "- Platform-Based API. You can get the API Key under the Settings->API\
    \ Options Page\n- overview: |\n  - Comprehensive user activity tracking\n  - Detailed\
    \ audit trail management\n  - Security compliance monitoring\n  - Historical activity\
    \ analysis\n- target_audience: |\n  - Security administrators\n  - Compliance\
    \ officers\n  - IT auditors\n  - System administrators\n  - Risk management teams\n\
    - use_cases: |\n  - Activity monitoring\n  - Compliance reporting\n  - Security\
    \ investigation\n  - Access pattern analysis\n  - User behavior tracking\n- conclusion:\
    \ Critical for maintaining security compliance and activity oversight\n"
- name: Combolist API
  description: "- \"**Note:** Available as an add-on service\"\n- overview: |\n  -\
    \ Credential exposure monitoring\n  - Comprehensive breach data analysis\n- target_audience:\
    \ |\n  - E-commerce security teams\n  - Banking security analysts\n  - Fraud prevention\
    \ teams\n  - Account security specialists\n- use_cases: |\n  - Credential stuffing\
    \ prevention\n  - Account takeover protection\n  - Breach exposure monitoring\n\
    \  - Customer account security\n- conclusion: Essential for e-commerce and banking\
    \ customer security\n"
- name: Threat Feed IOC API
  description: '"**Note:** Available as an add-on service for professional license"

    - Platform-Based API. You can get the API Key under the Settings->API Options
    Page

    ## Overview:

    - Comprehensive threat intelligence feed

    - Real-time IOC distribution

    ## Target Audience:

    - Security teams

    - Threat hunters

    - SOC analysts

    - Intelligence teams

    ## Use Cases:

    - Threat detection

    - IOC enrichment

    - Security automation

    - Threat hunting

    ## Conclusion:

    - Critical for maintaining up-to-date threat intelligence

    '
- name: Malware Analysis API
  description: "- Advanced malware analysis platform for file-based threats.\n- API\
    \ for uploading and analyzing malware files in real-time.\n- Additional API Key\
    \ required.\n## Analysis Features\n- Automated malware detection\n- Behavior analysis\n\
    - Threat classification\n- IOC extraction\n## File Requirements\n- Maximum file\
    \ size: 25MB\n- Supported file types detailed in docs\n- Password-protected archives\
    \ accepted\n## Credit Allocation\n- Professional: 20 credits\n- Enterprise: 100\
    \ credits\n- Premium: 1000 credits\n## Results\n- Detailed analysis report\n-\
    \ Threat scoring\n- Behavioral indicators\n- MITRE ATT&CK   mapping\n## Target\
    \ Audience:\n- Security analysts\n- Threat hunters\n- SOC teams\n- Malware researchers\n\
    ## Use Cases:\n- Malware detection\n- Threat analysis\n- Incident investigation\n\
    - Zero-day identification\n## Conclusion:\n- Essential for organizations requiring\
    \ deep malware analysis capabilities\nNote: This API endpoint mirrors the functionality\
    \ available through the \nSOCRadar platform's Cyber Threat Intelligence > Tactical\
    \ Intelligence > Malware Analysis File Analysis\n"
- name: CTI Threat Hunting Rules API
  description: "- Require an Additional API Key (Pay-Per-Use APIs for Related License)\
    \ - Enterprise, CTIFORSOC Ultimate\n##Overview:\n- Advanced threat hunting rule\
    \ management\n  - SIEM and EDR rule creation and distribution\n- target_audience:\
    \ |\n  - Threat hunters\n  - SOC analysts\n  - Security engineers\n  - Detection\
    \ engineers\n- use_cases: |\n  - Custom rule development\n  - Threat detection\n\
    \  - SIEM integration\n  - Alert tuning\n- conclusion: Critical for organizations\
    \ building robust detection capabilities\n"
- name: CTI Threat Investigating API
  description: 'The CTI Threat Investigation API provides comprehensive threat intelligence
    capabilities for advanced analysis and investigation.

    This API enables deep-dive analysis of threats, actors, and campaigns with detailed
    contextual information.

    ##Overview:

    - Comprehensive threat intelligence platform

    - Real-time threat actor tracking

    - Advanced campaign analysis capabilities

    - Detailed IOC enrichment

    - Behavioral analysis

    - Attribution tracking

    - Malware analysis integration

    ##Target Audience:

    - Threat intelligence analysts

    - Security researchers

    - SOC teams

    - Incident response teams

    - Threat hunting teams

    - Digital forensics specialists


    ##Use Cases:

    - Threat actor profiling and tracking

    - Campaign analysis and correlation

    - IOC enrichment and validation

    - Threat hunting and investigation

    - Incident response support

    - Attribution analysis

    - Malware family tracking


    ##Search Capabilities:

    - Actor/group search

    - Campaign tracking

    - IOC lookup

    - Malware analysis

    - MITRE ATT&CK mapping

    - Historical threat data

    - Relationship mapping

    ##Credit System:

    - 1 credit per detailed threat analysis

    - Requires CTIFORSOC Ultimate license


    ##Additional Features:

    - Custom report generation

    - API integration capabilities

    - Automated analysis workflows

    - Export functionality

    - Alert system for new threats

    - Collaboration tools


    ##Conclusion:

    - Essential tool for professional threat intelligence teams

    - Comprehensive investigation capabilities

    - Advanced analysis features

    - Real-time threat tracking

    - Integration with existing security tools

    - Require an Additional API Key (Pay-Per-Use APIs for Related License) - CTIFORSOC
    Ultimate

    '
- name: Threat Actor Malware API
  description: "- \"**Note:** Requires an additional key for detailed threat actor\
    \ analysis\"\n##Overview:\n- Advanced threat actor tracking and analysis\n- Malware\
    \ campaign monitoring\n##Target Audience:\n- Threat intelligence analysts\n- Security\
    \ researchers\n- SOC teams\n- Incident responders\n##Use Cases:\n- Threat actor\
    \ profiling\n- Campaign tracking\n  - TTPs analysis\n  - Strategic planning\n\
    ##Conclusion:\n- Critical for understanding and tracking threat actor activities\n"
- name: CTI Vulnerability Intelligence API
  description: "The CTI Vulnerability API allows you to retrieve information about\
    \ vulnerabilities you want.\nYou can use this API to access vulnerabilities based\
    \ on filters you apply or to retrieve specific vulnerability details.\nAdvanced\
    \ vulnerability search and analysis with comprehensive threat context.\n#overview\n\
    \  - Comprehensive vulnerability intelligence platform\n  - Real-time CVE tracking\
    \ and analysis\n  - Real-time vulnerability tracking\n- Exploit availability tracking\n\
    - Patch information\n- CVSS, EPSS, and SVRS scoring\n#target_audience\n  - Security\
    \ analysts\n  - Vulnerability managers\n  - Risk assessment teams\n  - Security\
    \ researchers\n#use_cases\n  - Vulnerability assessment\n  - Risk prioritization\n\
    \  - Threat intelligence correlation\n  - Patch management\n# Search Capabilities\n\
    - CVE database search\n- Vulnerability trending\n- Exploit prediction\n- Risk\
    \ scoring\n# Credit System\n- 1 credit per detailed analysis\n- Requires an additional\
    \ key\n# Conclusion\n- Essential for maintaining comprehensive vulnerability intelligence\n"
- name: Identity Intelligence API
  description: '## Overview

    Search endpoint for querying identity and credential exposure across:

    - Breached data collections (Threat actor channels , forums and combolists)

    - Infostealer Data details

    - Russian Dark Web & Black Market marketplace listings


    ## Access Requirements

    **Important:** Additional identity intelligence credits required for access


    ## Target Users

    - Fraud prevention teams

    - Identity & access management specialists

    - Security operations analysts

    - Digital forensics investigators

    - Threat intelligence analysts


    ## Core  Features

    - Search for exposed identities and credentials

    - Unlock detailed breach records

    - Monitor new exposure incidents

    - Track identity exposure patterns

    - Query dark web marketplace listings

    ##Use Cases

    - Credential & Identityexposure detection

    - Identity threat monitoring

    - Compliance reporting

    - Detect compromised credentials

    - Assess access risks

    ## Credit System

    - Search operations consume credits

    - Unlocking detailed records consume credits

    - Each successful search deducts from credit balance


    ## Compliance & Security

    - No raw password data is exposed

    - Password Credentials provided only as:

    - SHA-256 hashes

    - NTLM hashes

    ## Conclusion

    - Critical for protecting organizational identities and access credentials

    '
- name: Ransomware Victim API
  description: "# Advanced Ransomware Victim Intelligence API\nEnterprise-grade API\
    \ for accessing comprehensive ransomware victim intelligence, threat actor tracking,\
    \ and incident analysis.\n\n## Service Overview\n- Real-time ransomware incident\
    \ monitoring\n- Ransomware group activity tracking\n- Comprehensive impact assessment\
    \ with AI Insights\n- Advanced filtering and search capabilities\n\n  ## Key Features\n\
    - Victim organization details with AI Insights\n- Attack timeline tracking with\
    \ date filtering options\n- Data leak monitoring if it is shared\n- Industry &\
    \ Geographic distribution\n- News and announcement correlation\n\n## Authentication\n\
    - Requires a dedicated API key for ransomware intelligence\n- Key must be included\
    \ in API-KEY header\n- Rate limiting applies (request per second)\n\n## Common\
    \ Use Cases\n- Threat intelligence enrichment\n- Risk assessment\n- Incident investigation\n\
    - Strategic planning\n- Trend analysis\n- Early warning\n\n## Target Audience\n\
    - Threat intelligence teams\n- Incident response teams\n- Risk analysts\n- Security\
    \ researchers\n\n## Use Cases\n- Ransomware trend analysis\n- Victim impact assessment\n\
    - Threat actor tracking\n- Risk forecasting\n\n## Conclusion\n- Vital for understanding\
    \ ransomware threats and victim patterns\n"
- name: Threat Analysis API
  description: "# Overview\n  - Advanced threat intelligence analysis\n  - Real-time\
    \ trust scoring\n  - Multi-source threat correlation\n  - Automated threat investigation\n\
    # Analysis Capabilities\n  - Trust score calculation (0-100)\n  - Multi-source\
    \ correlation\n  - Real-time threat evaluation\n  - Automated investigation\n\
    \  - IOC validation\n  - Advanced threat hunting\n  - Risk scoring automation\
    \    \n# Operational Details\n  - Async processing for advanced investigation\n\
    \  - Cached results available for 24 hours\n  - Requires an additional key for\
    \ threat intelligence analysis\n  - Force new analysis option\n# Target Audience\n\
    \  - Threat analysts\n  - SOC teams\n  - Security researchers\n  - Incident responders\n\
    \  - Risk assessment teams\n# Use Cases\n  - Entity risk assessment\n  - Threat\
    \ intelligence enrichment\n# Credit Usage\n  - 1 credit per entity analysis\n\
    \  - Request Limit: 6 requests per minute\n  - Monthly & Daily Query Limit: 1500\
    \ queries\n  - Total Credit Usage: 18000 credits\n# Conclusion \n  - Vital for\
    \ comprehensive threat assessment and risk analysis.\n  - Initiate detailed threat\
    \ analysis for specific entities with trust scoring.\n"
